{"version":3,"sources":["constants/routes.js","components/Header/NavBar.js","helpers/helperFunctions.js","store/actions/actions.js","api/api.js","constants/constants.js","store/actions/movieActions.js","images/img-placeholder.jpg","common/ImageLoader.js","common/Styles.js","components/slider/SliderItem.js","components/slider/MovieSlider.js","components/Movies/MovieCard.js","components/Movies/MovieList.js","hooks/useDocumentTitle.js","containers/Home.js","store/actions/genreActions.js","store/actions/peopleActions.js","store/actions/searchActions.js","containers/UpcomingMovies.js","containers/TopRatedMovies.js","containers/TrendingMovies.js","components/Movies/MovieOverview.js","hooks/useDidMount.js","components/People/PeopleCard.js","components/People/PeopleList.js","components/Movies/Filter.js","components/Movies/MovieDetails.js","components/Movies/MovieCast.js","components/Poster/PosterCard.js","components/Movies/MoviePoster.js","components/Movies/SimilarMovies.js","components/Movies/Reviews.js","containers/ViewMovie.js","common/Theme.js","hooks/usePageSaver.js","store/actions/filterActions.js","containers/DiscoverMovies.js","containers/TvShows.js","containers/People.js","images/background.jpg","components/People/PersonBiography.js","components/People/Casting.js","containers/ViewPeople.js","containers/ViewCasting.js","images/action.jpg","images/adventure.jpg","images/animation.jpg","images/comedy.jpg","images/crime.jpg","images/documentary.jpg","images/drama.png","images/family.jpg","images/fantasy.jpg","images/history.jpg","images/horror.jpg","images/music.jpg","images/mystery.jpg","images/romance.jpg","images/science.jpg","images/tv.jpg","images/thriller.jpg","images/war.jpg","images/western.jpg","components/Genre/GenreCard.js","containers/Genre.js","containers/ViewGenre.js","components/People/PersonProfiles.js","containers/ViewPictures.js","components/Search/SearchMovieTab.js","components/Search/SearchTvTab.js","components/Search/SearchPeopleTab.js","containers/Search.js","common/ScrollTop.js","App.js","reportWebVitals.js","store/reducer/moviesReducer.js","store/reducer/filtersReducer.js","store/reducer/genreReducer.js","store/reducer/peopleReducer.js","store/reducer/searchReducer.js","store/reducer/index.js","sagas/sagas.js","sagas/watchers.js","index.js"],"names":["HOME","DISCOVER","TRENDING","PEOPLE","GENRE","useStyles","makeStyles","theme","root","display","width","title","fontFamily","marginRight","spacing","color","textDecoration","appBar","backgroundColor","whitespace","flexGrow","menuOption","fontSize","margin","padding","menuOptionActive","link","palette","text","secondary","linkActive","drawer","breakpoints","up","flexShrink","menuButton","drawerPaper","height","background","paper","content","marginTop","search","position","borderRadius","shape","fade","common","white","searchIcon","inputRoot","inputInput","paddingLeft","transition","transitions","create","menuArr","icon","path","routes","ResponsiveDrawer","props","React","useState","searchQuery","setSearchQuery","window","classes","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","handleChange","event","target","value","onSubmitQuery","query","history","push","onKeyEnter","e","key","menuOptions","Hidden","smDown","map","item","index","to","exact","activeClassName","className","IconButton","onClick","InputBase","onKeyPress","placeholder","input","inputProps","onChange","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","container","undefined","document","body","CssBaseline","AppBar","Toolbar","aria-label","edge","Typography","variant","noWrap","SwipeableDrawer","anchor","direction","open","onClose","onOpen","ModalProps","keepMounted","isEmpty","obj","hasOwnProperty","numberWithCommas","x","toString","replace","getYear","date","split","toHrsMins","mins","h","Math","floor","m","downloadFileUrl","urlToDownload","a","Promise","resolve","reject","axios","get","responseType","response","url","URL","createObjectURL","Blob","data","createElement","href","setAttribute","Date","getTime","appendChild","click","IS_LOADING","ADD_SEARCH_HISTORY","CLEAR_SEARCH_HISTORY","FETCH_SELECTED_MOVIE","FETCH_SELECTED_MOVIE_SUCCESS","FETCH_SELECTED_PERSON","FETCH_SELECTED_PERSON_SUCCESS","FETCH_TRENDING_MOVIES","FETCH_TRENDING_MOVIES_SUCCESS","FETCH_DISCOVER_MOVIES","FETCH_DISCOVER_MOVIES_SUCCESS","FETCH_TV_SHOWS","FETCH_TV_SHOWS_SUCCESS","FETCH_PEOPLE","FETCH_PEOPLE_SUCCESS","FETCH_GENRES","FETCH_GENRES_SUCCESS","FETCH_GENRE_CATEGORY","FETCH_GENRE_CATEGORY_SUCCESS","FETCH_POPULAR_MOVIES","FETCH_POPULAR_MOVIES_SUCCESS","FETCH_TOPRATED_MOVIES","FETCH_TOPRATED_MOVIES_SUCCESS","FETCH_UPCOMING_MOVIES","FETCH_UPCOMING_MOVIES_SUCCESS","FETCH_MAIN_MOVIES","FETCH_MAIN_MOVIES_SUCCESS","SET_YEAR_FILTER","SET_GENRE_FILTER","SET_SORT_FILTER","UPDATE_QUERY","SEARCH","SEARCH_SUCCESS","SEARCH_MOVIES","SEARCH_MOVIES_SUCCESS","SEARCH_TV_SHOWS","SEARCH_TV_SHOWS_SUCCESS","SEARCH_PEOPLE","SEARCH_PEOPLE_SUCCESS","UPDATE_SEARCH_QUERY","tmdbKey","defaults","baseURL","params","fetchRequest","param","page","method","api_key","request","fetchMovie","category","id","append_to_response","movieRequest","fetchMovieCredits","creditsRequest","cast","fetchMovieKeywords","keywordsRequest","keywords","fetchMovieReviews","reviewsRequest","fetchPerson","personRequest","fetchPersonCasting","castingRequest","searchMovie","searchTv","searchPerson","fetchTrendingMovies","type","actionTypes","payload","fetchDiscoverMovies","fetchTvShows","fetchTopRatedMovies","fetchUpcomingMovies","ImageLoader","_loaded","src","loaded","setLoaded","loadedClassName","loadingClassName","data-key","imgId","onLoad","defaultProps","p2","py2","containerWrapper","minHeight","w100","h100","py4","posterContainerWrapper","posterSliderConent","zIndex","containerBackdrop","top","left","bottom","right","img","backgroundSize","backgroundPosition","backgroundRepeat","fontWeight","reviewTitle","sliderConent","ratings","marginBottom","movieOverview","overflow","WebkitLineClamp","WebkitBoxOrient","personOverview","viewPoster","objectFit","down","viewButton","maxWidth","modalLink","modal","alignItems","justifyContent","default","border","boxShadow","shadows","overflowY","modalVideo","my1","my2","my3","my4","pyTab","personContainer","navLink","image","opacity","focusVisible","imageButton","imageSrc","imageBackdrop","black","imageTitle","imageMarked","scrollTop","transform","themeToggler","m1","SliderItem","movie","alt","backdrop_path","Grid","justify","xs","md","original_title","original_name","poster_path","imgPlaceholder","Skeleton","animation","align","Rating","readOnly","max","precision","vote_average","overview","Fragment","Button","fullWidth","movie_slider_wrapper","MovieSlider","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","draggable","easing","adaptiveHeight","movies","p0","MovieCard","release_date","first_air_date","useDispatch","Card","CardActionArea","CardMedia","component","CardContent","size","MovieList","templateCount","sm","lg","Container","Array","fill","useDocumentTitle","useLayoutEffect","Home","useSelector","state","popularMovies","topRatedMovies","upcomingMovies","dispatch","useEffect","results","slice","fetchGenreCategory","fetchPeople","action","mt1","UpcomingMovies","currentPage","setCurrentPage","queryString","total_results","Pagination","count","total_pages","boundaryCount","TopRatedMovies","categories","TrendingMovies","trendingMovies","MovieOverview","isOpenModal","setOpenModal","isOpenVideoModal","setOpenVideoModal","channel","isOpen","playlist","videos","video","videoId","Modal","mainGrid","genres","length","genre","name","console","log","useDidMount","didMount","setDidMount","PeopleCard","people","profile_path","character","gutterBottom","PeopleList","person","gridClass","mb1","homepage","MovieDetails","genreName","toLowerCase","status","budget","revenue","runtime","keyword","MovieCast","casts","match","PosterCard","isDownloading","setIsDownloading","file_path","poster","then","catch","disabled","endIcon","CircularProgress","MoviePoster","posters","SimilarMovies","Reviews","reviews","review","Accordion","AccordionSummary","expandIcon","aria-controls","author","AccordionDetails","ViewMovie","current","images","movieId","parseInt","fetchSelectedMovie","similar","DarkTheme","createMuiTheme","typography","usePageSaver","pathname","useLocation","p","localStorage","moviesArkPage","JSON","parse","getItem","setItem","stringify","yearToday","getFullYear","years","i","formControl","minWidth","selectEmpty","Filter","setYear","anchorEl","setAnchorEl","filterCategory","filterData","year","sort","handleClose","movieSortFilter","FormControl","InputLabel","Select","labelId","selected","setSortFilter","displayEmpty","MenuItem","yearSortFilter","setYearFilter","genreSortFilter","setGenreFilter","mdUp","Fab","currentTarget","FilterListRounded","Boolean","DiscoverMovies","discoverMovies","filter","filters","discover","TvShows","tvShows","tv","People","PersonBiography","actor","setOpen","biography","backgroundImg","Casting","casting","actorId","scrollTo","birthday","known_for_department","gender","place_of_birth","also_known_as","ViewPeople","ViewCasting","goBack","GenreCard","paths","adventure","comedy","crime","documentary","drama","family","fantasy","horror","music","mystery","romance","science","thriller","war","western","ButtonBase","focusRipple","focusVisibleClassName","style","backgroundImage","Genre","fetchGenres","ViewGenre","genreMovies","toUpperCase","PersonProfiles","ViewPictures","profiles","SearchMovieTab","searchMovies","SearchTvTab","searchTvShows","SearchPeopleTab","searchPeople","a11yProps","Search","setValue","totalFound","Tabs","newValue","indicatorColor","textColor","Tab","label","axis","onChangeIndex","role","aria-labelledby","ScrollTop","addEventListener","scrollHandler","removeEventListener","scroll","useRef","pageYOffset","y","duration","initialY","documentElement","baseY","difference","startTime","performance","now","requestAnimationFrame","step","normalizedTime","cos","PI","scrollToTop","ref","App","ThemeProvider","NavBar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","moviesReducer","act","upcoming","topRated","popular","recentSearch","init","errorHandler","fetchRequestSaga","updateFilterQuerySaga","fetchSelectedMovieSaga","searchSaga","fetchMainMoviesSaga","fetchSelectedPersonSaga","updateQuery","yearFilter","sortFilter","genreFilter","put","call","api","select","all","rootSaga","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinereducer","combineReducers","mainReducer","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56ea922a.chunk.js","sourcesContent":["export const HOME = '/';\r\nexport const DISCOVER = '/discover';\r\nexport const TRENDING = '/trending';\r\nexport const TV = '/tv';\r\nexport const TOP_RATED = '/top_rated';\r\nexport const UPCOMING = '/upcoming';\r\nexport const POPULAR = '/popular';\r\nexport const VIEW_MOVIE = '/view/:category/:id';\r\nexport const PEOPLE = '/people';\r\nexport const VIEW_PEOPLE = '/view/person/profile/:id';\r\nexport const VIEW_PEOPLE_PROFILE = '/view/person/profile/:id/images';\r\nexport const VIEW_PEOPLE_CASTING = '/view/person/profile/:id/casting';\r\nexport const GENRE = '/genre';\r\nexport const VIEW_GENRE = '/genre/:genre/:id';\r\nexport const SEARCH = '/search/movie/:query';\r\nexport const VIEW_MOVIE_POSTER = '/view/movie/:id/images';\r\nexport const VIEW_MOVIE_CASTS = '/view/movie/:id/casts';\r\nexport const FAVORITES = '/favorites';\r\nexport const NETWORK_ERROR = '/network-error';\r\nexport const ERROR = '/error';\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {SwipeableDrawer,fade, InputBase} from \"@material-ui/core\";\r\nimport * as routes from '../../constants/routes';\r\nimport TvIcon from \"@material-ui/icons/Tv\";\r\nimport { NavLink} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    width:\"50%\"\r\n  },\r\n  title: {\r\n    fontFamily: \"Patrick Hand\",\r\n    marginRight: theme.spacing(2),\r\n    color:\"white\",\r\n    textDecoration:\"none\",\r\n  },\r\n  appBar:{\r\n    backgroundColor:\"rgba(0,0,0,0.3)\"\r\n  },\r\n  whitespace:{\r\n    flexGrow:1,\r\n  },\r\n  menuOption:{\r\n    fontSize:\"1.2rem\",\r\n    fontFamily:\"Patrick Hand\",\r\n    color:\"#CCCCCC\",\r\n    margin:\"auto\",\r\n    padding:\"0.5rem 1rem\",\r\n    backgroundColor:\"transparent\",\r\n    textDecoration:\"none\",\r\n  },\r\n  menuOptionActive:{\r\n    color:\"#18ffff\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color:theme.palette.text.secondary,\r\n    fontFamily:\"Patrick Hand\"\r\n  },\r\n  linkActive: {\r\n    textDecoration: \"none\",\r\n    backgroundColor:\"rgba(0,0,0,0.3)\",\r\n    color:\"#18ffff\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color:\"white\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    height:64,\r\n    background:theme.palette.background.paper,\r\n  },\r\n  content: {\r\n    marginTop:\"4rem\",\r\n    width:\"100%\",\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    margin:\"auto 0.5rem\",\r\n    width: '16rem',\r\n    display:\"flex\",\r\n  },\r\n  searchIcon: {\r\n    margin:\"auto 0.2rem\",\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft:2,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    fontSize:\"1rem\",\r\n    color:\"white\",\r\n  },\r\n})); \r\n\r\nconst menuArr = [\r\n  {\r\n    title: \"Home\",\r\n    icon: <TvIcon></TvIcon>,\r\n    path: routes.HOME,\r\n  },\r\n  {\r\n    title: \"Trending\",\r\n    icon: <TvIcon></TvIcon>,\r\n    path: routes.TRENDING,\r\n  },\r\n  {\r\n    title: \"Discover\",\r\n    icon: <TvIcon></TvIcon>,\r\n    path: routes.DISCOVER,\r\n  },\r\n  {\r\n    title: \"TV Shows\",\r\n    icon: <TvIcon></TvIcon>,\r\n    path: routes.TV,\r\n  },\r\n  {\r\n    title: \"People\",\r\n    icon: <TvIcon></TvIcon>,\r\n    path: routes.PEOPLE,\r\n  },\r\n  {\r\n    title: \"Genre\",\r\n    icon: <TvIcon></TvIcon>,\r\n    path: routes.GENRE,\r\n  },\r\n];\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const [searchQuery, setSearchQuery]= React.useState();\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  \r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(mobileOpen=>!mobileOpen);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const onSubmitQuery = () => {\r\n    if (searchQuery) {\r\n      let query=searchQuery;\r\n      setSearchQuery('');\r\n      props.history.push(`/search/movie/${query}`);\r\n    }\r\n  };\r\n\r\n  const onKeyEnter = (e) => {\r\n    if (e.key === 'Enter' && searchQuery) {\r\n      onSubmitQuery();\r\n    }\r\n  };\r\n\r\n  const menuOptions = <Hidden smDown>\r\n    {menuArr.map((item,index)=><NavLink\r\n      to={item.path}\r\n      key={item.title}\r\n      exact\r\n      activeClassName={classes.menuOptionActive}\r\n      className={classes.menuOption}    \r\n      >{item.title}</NavLink>)}\r\n      <div className={classes.whitespace}></div>\r\n      <div className={classes.search}>\r\n      <IconButton onClick={onSubmitQuery} className={classes.searchIcon}>\r\n              <SearchIcon />\r\n      </IconButton>\r\n            <InputBase\r\n              onKeyPress={onKeyEnter}\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              value={searchQuery}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n  </Hidden>\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.drawerPaper} />\r\n      <Divider />\r\n      <List>\r\n        {menuArr.map((item, index) => (\r\n          <NavLink\r\n            to={item.path}\r\n            key={item.title}\r\n            exact\r\n            activeClassName={classes.linkActive}\r\n            className={classes.link}>\r\n            <ListItem button>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          </NavLink>\r\n        ))}\r\n        <ListItem>\r\n        <div className={classes.search}>\r\n      <IconButton onClick={onSubmitQuery} className={classes.searchIcon}>\r\n              <SearchIcon />\r\n      </IconButton>\r\n            <InputBase\r\n              onKeyPress={onKeyEnter}\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              value={searchQuery}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" color=\"transparent\" className={classes.appBar}>\r\n        <Toolbar>\r\n        <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <NavLink to={routes.HOME} className={classes.title}>\r\n          <Typography variant=\"h5\" className={classes.title} noWrap>\r\n            MoviesArk\r\n          </Typography>\r\n          </NavLink>\r\n          {menuOptions}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav aria-label=\"mailbox folders\">\r\n          <SwipeableDrawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            onOpen={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: false, // Better open performance on mobile.\r\n            }}>\r\n            {drawer}\r\n          </SwipeableDrawer>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import axios from 'axios';\r\n\r\nexport const isEmpty = (obj) => {\r\n  for (let key in obj) {\r\n    if (obj.hasOwnProperty(key))\r\n      return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getCSSVar = (prop) => {\r\n  return getComputedStyle(document.documentElement).getPropertyValue(prop);\r\n};\r\n\r\nexport const numberWithCommas = (x) => {\r\n  return x ? x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : 0;  \r\n};\r\n\r\nexport const getYear = (date) => {\r\n  if (date) {\r\n    return date.split('-')[0];\r\n  }\r\n};\r\n\r\nexport const toHrsMins = (mins) => {\r\n  let h = Math.floor(mins / 60);\r\n  let m = mins % 60;\r\n  h = h < 10 ? `0${h}` : h;\r\n  m = m < 10 ? `0${m}` : m;\r\n  return `${h}hr ${m}min`;\r\n};\r\n\r\nexport const downloadFileUrl = async (urlToDownload) => {\r\n  return new Promise(async(resolve, reject) => {\r\n    try {\r\n      const response = await axios.get(urlToDownload, { responseType: 'blob' });\r\n      if (response) {\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', `poster_${new Date().getTime()}.jpg`);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n\r\n        return resolve('Download successful.');\r\n      } else {\r\n        return reject('Failed to download');\r\n      }\r\n    } catch(e) {\r\n      return reject('Failed to download: ', e);\r\n    }\r\n  });\r\n};\r\n","export const FETCH_MOVIE_REQUEST = 'FETCH_MOVIE_REQUEST';\r\nexport const IS_LOADING = 'IS_LOADING';\r\nexport const ADD_SEARCH_HISTORY = 'ADD_SEARCH_HISTORY';\r\nexport const CLEAR_SEARCH_HISTORY = 'CLEAR_SEARCH_HISTORY';\r\nexport const ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\r\nexport const REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES';\r\nexport const FETCH_SELECTED_MOVIE = 'FETCH_SELECTED_MOVIE';\r\nexport const FETCH_SELECTED_MOVIE_SUCCESS = 'FETCH_SELECTED_MOVIE_SUCCESS';\r\nexport const FETCH_SELECTED_PERSON = 'FETCH_SELECTED_PERSON';\r\nexport const FETCH_SELECTED_PERSON_SUCCESS = 'FETCH_SELECTED_PERSON_SUCCESS';\r\nexport const FETCH_TRENDING_MOVIES = 'FETCH_TRENDING_MOVIES';\r\nexport const FETCH_TRENDING_MOVIES_SUCCESS = 'FETCH_TRENDING_MOVIES_SUCCESS';\r\nexport const FETCH_DISCOVER_MOVIES = 'FETCH_DISCOVER_MOVIES';\r\nexport const FETCH_DISCOVER_MOVIES_SUCCESS = 'FETCH_DISCOVER_MOVIES_SUCCESS';\r\nexport const FETCH_TV_SHOWS = 'FETCH_TV_SHOWS';\r\nexport const FETCH_TV_SHOWS_SUCCESS = 'FETCH_TV_SHOWS_SUCCESS';\r\nexport const FETCH_PEOPLE = 'FETCH_PEOPLE';\r\nexport const FETCH_PEOPLE_SUCCESS = 'FETCH_PEOPLE_SUCCESS';\r\nexport const FETCH_GENRES = 'FETCH_GENRES';\r\nexport const FETCH_GENRES_SUCCESS = 'FETCH_GENRES_SUCCESS';\r\nexport const FETCH_GENRE_CATEGORY = 'FETCH_GENRE_CATEGORY';\r\nexport const FETCH_GENRE_CATEGORY_SUCCESS = 'FETCH_GENRE_CATEGORY_SUCCESS';\r\nexport const FETCH_POPULAR_MOVIES = 'FETCH_POPULAR_MOVIES';\r\nexport const FETCH_POPULAR_MOVIES_SUCCESS = 'FETCH_POPULAR_MOVIES_SUCCESS';\r\nexport const FETCH_TOPRATED_MOVIES = 'FETCH_TOPRATED_MOVIES';\r\nexport const FETCH_TOPRATED_MOVIES_SUCCESS = 'FETCH_TOPRATED_MOVIES_SUCCESS';\r\nexport const FETCH_UPCOMING_MOVIES = 'FETCH_UPCOMING_MOVIES';\r\nexport const FETCH_UPCOMING_MOVIES_SUCCESS = 'FETCH_UPCOMING_MOVIES_SUCCESS';\r\nexport const FETCH_MAIN_MOVIES = 'FETCH_MAIN_MOVIES';\r\nexport const FETCH_MAIN_MOVIES_SUCCESS = 'FETCH_MAIN_MOVIES_SUCCESS';\r\nexport const SET_YEAR_FILTER = 'SET_YEAR_FILTER';\r\nexport const SET_GENRE_FILTER = 'SET_GENRE_FILTER';\r\nexport const SET_SORT_FILTER = 'SET_SORT_FILTER';\r\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\r\nexport const SEARCH = 'SEARCH';\r\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';\r\nexport const SEARCH_MOVIES = 'SEARCH_MOVIES';\r\nexport const SEARCH_MOVIES_SUCCESS = 'SEARCH_MOVIES_SUCCESS';\r\nexport const SEARCH_TV_SHOWS = 'SEARCH_TV_SHOWS';\r\nexport const SEARCH_TV_SHOWS_SUCCESS = 'SEARCH_TV_SHOWS_SUCCESS';\r\nexport const SEARCH_PEOPLE = 'SEARCH_PEOPLE';\r\nexport const SEARCH_PEOPLE_SUCCESS = 'SEARCH_PEOPLE_SUCCESS';\r\nexport const UPDATE_SEARCH_QUERY = 'UPDATE_SEARCH_QUERY';\r\nexport const SET_DARK_MODE = 'SET_DARK_MODE';\r\nexport const TMDB_POSTER_BASE = 'https://image.tmdb.org/t/p/original';\r\nexport const TMDB_BACKDROP_PATH = 'https://image.tmdb.org/t/p/w1400_and_h450_face/';\r\nexport const TMDB_POSTER_PATH = 'https://image.tmdb.org/t/p/w185_and_h278_face/';\r\nexport const TOAST_TIMEOUT = 3000;\r\n","import axios from 'axios';\r\nimport * as Constants from \"../constants/constants\";\r\n\r\n// const cancelSource = axios.CancelToken.source();\r\nconst tmdb = 'https://api.themoviedb.org/3';\r\nconst tmdbKey = Constants.TMBDAPIKEY;\r\n\r\naxios.defaults.baseURL = tmdb;\r\naxios.defaults.params = {};\r\naxios.defaults.params['api_key'] = tmdbKey;\r\n\r\nexport const fetchRequest = async (param, page = 1) => {\r\n  const request = await axios({\r\n    method: 'GET',\r\n    url: `${param}`,\r\n    params: { \r\n      page, \r\n      api_key: tmdbKey\r\n    }\r\n  });\r\n  return request.data;\r\n};\r\n\r\nexport const fetchMovie = async (category, id) => {\r\n  const movieRequest = await axios({\r\n    method: 'GET',\r\n    url: `/${category}/${id}`,\r\n    params: {\r\n      append_to_response: 'similar,videos,images',\r\n      api_key: tmdbKey\r\n    }\r\n  });\r\n  return movieRequest.data;\r\n};\r\n\r\nexport const fetchMovieCredits = async (category, id) => {\r\n  const creditsRequest = await axios({\r\n    method: 'GET',\r\n    url: `/${category}/${id}/credits`,\r\n    params: {\r\n      api_key: tmdbKey\r\n    }\r\n  });\r\n\r\n  return creditsRequest.data.cast;\r\n};\r\n\r\nexport const fetchMovieKeywords = async (category, id) => {\r\n  const keywordsRequest = await axios({\r\n    method: 'GET',\r\n    url: `/${category}/${id}/keywords`,\r\n    params: {\r\n      api_key: tmdbKey\r\n    }\r\n  });\r\n  return keywordsRequest.data.keywords;\r\n};\r\n\r\nexport const fetchMovieReviews = async (category, id) => {\r\n  const reviewsRequest = await axios({\r\n    method: 'GET',\r\n    url: `/${category}/${id}/reviews`,\r\n    params: {\r\n      api_key: tmdbKey\r\n    }\r\n  });\r\n\r\n  return reviewsRequest.data;\r\n};\r\n\r\nexport const fetchPerson = async (id) => {\r\n  const personRequest = await axios({\r\n    method: 'GET',\r\n    url: `/person/${id}`,\r\n    params: {\r\n      api_key: tmdbKey,\r\n      append_to_response: 'images'\r\n    }\r\n  });\r\n  return personRequest.data;\r\n};\r\n\r\nexport const fetchPersonCasting = async (id) => {\r\n  const castingRequest = await axios({\r\n    method: 'GET',\r\n    url: `/person/${id}/combined_credits`,\r\n    params: {\r\n      api_key: tmdbKey,\r\n    }\r\n  });\r\n  return castingRequest.data.cast;\r\n};\r\n\r\nexport const searchMovie = async (query) => {\r\n  const castingRequest = await axios({\r\n    method: 'GET',\r\n    url: `/search/movie`,\r\n    params: {\r\n      api_key: tmdbKey,\r\n      query\r\n    }\r\n  });\r\n  return castingRequest.data;\r\n};\r\n\r\nexport const searchTv = async (query) => {\r\n  const castingRequest = await axios({\r\n    method: 'GET',\r\n    url: `/search/tv`,\r\n    params: {\r\n      api_key: tmdbKey,\r\n      query\r\n    }\r\n  });\r\n  return castingRequest.data;\r\n};\r\n\r\nexport const searchPerson = async (query) => {\r\n  const castingRequest = await axios({\r\n    method: 'GET',\r\n    url: `/search/person`,\r\n    params: {\r\n      api_key: tmdbKey,\r\n      query\r\n    }\r\n  });\r\n  return castingRequest.data;\r\n};\r\n","export const TMBDAPIKEY=\"c137839232b492729d1a72c0821edfc9\";\r\nexport const TMDB_POSTER_BASE = 'https://image.tmdb.org/t/p/original';\r\nexport const TMDB_BACKDROP_PATH = 'https://image.tmdb.org/t/p/w1400_and_h450_face/';\r\nexport const TMDB_POSTER_PATH = 'https://image.tmdb.org/t/p/w185_and_h278_face/';","import * as actionTypes from './actions';\r\nimport * as api from '../../api/api';\r\n\r\nexport const fetchTrendingMovies = (query, page = 1) => ({\r\n  type: actionTypes.FETCH_TRENDING_MOVIES,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const fetchDiscoverMovies = (query, page = 1) => ({\r\n  type: actionTypes.FETCH_DISCOVER_MOVIES,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const fetchTvShows = (query, page = 1) => ({\r\n  type: actionTypes.FETCH_TV_SHOWS,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const fetchPopularMovies = (query, page = 1) => ({\r\n  type: actionTypes.FETCH_POPULAR_MOVIES,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const fetchTopRatedMovies = (query, page = 1) => ({\r\n  type: actionTypes.FETCH_TOPRATED_MOVIES,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const fetchUpcomingMovies = (query, page = 1) => {\r\n  return ({\r\n  type: actionTypes.FETCH_UPCOMING_MOVIES,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n})};\r\n\r\nexport const fetchMainMovies = () => {\r\n  return {type:actionTypes.FETCH_MAIN_MOVIES};\r\n};\r\n\r\n\r\nexport const fetchSelectedMovie = (category, id) => ({\r\n  type: actionTypes.FETCH_SELECTED_MOVIE,\r\n  payload: {\r\n    category,\r\n    id\r\n  }\r\n});\r\n\r\n","export default __webpack_public_path__ + \"static/media/img-placeholder.e184fa13.jpg\";","import React, { useState } from 'react';\r\n\r\n\r\nconst ImageLoader = (props) => {\r\n  const _loaded = {};\r\n  const [loaded, setLoaded] = useState(_loaded[props.src]);\r\n\r\n  const onLoad = () => {\r\n    _loaded[props.src] = true;\r\n    setLoaded(true);\r\n  };\r\n\r\n  return (\r\n    <img \r\n        className={`${props.className} ${loaded ? props.loadedClassName : props.loadingClassName}`} \r\n        data-key={props.imgId}\r\n        onLoad={onLoad} \r\n        src={props.src} \r\n    />   \r\n  );\r\n};\r\n\r\nImageLoader.defaultProps = {\r\n  className: '',\r\n  loadingClassName: 'img-loading',\r\n  loadedClassName: 'img-loaded'\r\n};\r\n\r\nexport default ImageLoader;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nexport default makeStyles(theme=>({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  p2:{\r\n    padding:\"2rem\",\r\n  },\r\n  py2:{\r\n    padding:\"2rem auto\",\r\n  },\r\n  containerWrapper:{\r\n    position:\"relative\",\r\n    minHeight:\"110vh\",\r\n },\r\n w100:{\r\n   width:\"100%\",\r\n },\r\n h100:{\r\n   height:\"100%\",\r\n },\r\n py4:{\r\n  margin:\"6rem auto !important\",\r\n },\r\n posterContainerWrapper:{\r\n   position:\"relative\",\r\n },\r\n posterSliderConent:{\r\n  position:\"relative\",\r\n  minHeight:\"20vh\",\r\n  width:\"100%\",\r\n  zIndex:3,\r\n  color:\"white\",\r\n  padding:\"5rem auto\"\r\n},\r\n  containerBackdrop:{\r\n    position:\"absolute\",\r\n    top:0,\r\n    left:0,\r\n    bottom:0,\r\n    right:0,\r\n    height:\"100%\",\r\n    backgroundColor: \"rgba(0,0,0, 0.8) !important\",\r\n    zIndex:1,\r\n  },\r\n  img:{\r\n    position:\"absolute\",\r\n    zIndex:0,\r\n    height:\"100%\",\r\n    width:\"100%\",\r\n    top:0,\r\n    bottom:0,\r\n    backgroundSize:\"cover\",\r\n    backgroundPosition:\"center\",\r\n    backgroundRepeat:\"no-repeat\",\r\n  },\r\n  title:{\r\n    color:\"white\",\r\n    fontSize:\"2rem\",\r\n    margin:\"1rem auto\",\r\n    fontWeight:\"800\"\r\n  },  \r\n  reviewTitle:{\r\n    fontSize:\"1.2rem\",\r\n    fontWeight:\"900\"\r\n  },\r\n  sliderConent:{\r\n    position:\"relative\",\r\n    minHeight:\"100vh\",\r\n    width:\"100%\",\r\n    zIndex:3,\r\n    color:\"white\",\r\n    padding:\"5rem auto\"\r\n  },\r\n  ratings:{\r\n    fontSize:\"1.4rem\",\r\n    marginBottom:\"1rem\",\r\n    color:\"white\"\r\n  },\r\n  movieOverview:{\r\n    fontSize:\"1.2rem\",\r\n    color:\"white\",\r\n    overflow:\"hidden\",\r\n    display:\"-webkit-box\",\r\n    WebkitLineClamp:3,\r\n    WebkitBoxOrient:\"vertical\",\r\n  },\r\n  personOverview:{\r\n    fontSize:\"1.2rem\",\r\n    color:\"white\",\r\n    overflow:\"hidden\",\r\n    display:\"-webkit-box\",\r\n    WebkitLineClamp:5,\r\n    WebkitBoxOrient:\"vertical\",\r\n  },\r\n  viewPoster:{\r\n    width:300,\r\n    height:450,\r\n    objectFit:\"cover\",\r\n    margin:\"auto\",\r\n    [theme.breakpoints.down('md')]: {\r\n      width:180,\r\n      height:250,\r\n      objectFit:\"cover\",\r\n      margin:\"2rem auto 1rem\"\r\n    },\r\n  },\r\n  viewButton:{\r\n    maxWidth:\"15rem\",\r\n    margin:\"1rem auto\",\r\n  },\r\n  modalLink:{\r\n    textDecoration:\"none\",\r\n    display:\"block\",\r\n    margin:\"auto\",\r\n    marginTop:\"3rem\",\r\n    position:\"absolute\",\r\n    zIndex:100,\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    maxWidth:\"80%\",\r\n    width:800,\r\n    margin:\"auto\"\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.default,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    height:400,\r\n    overflowY:\"scroll\",\r\n  },\r\n  modalVideo:{\r\n    maxWidth:\"80%\",\r\n  },\r\n  my1:{\r\n    marginTop:\"1rem\",\r\n    marginBottom:\"1rem\",\r\n  },\r\n  my2:{\r\n    marginTop:\"2rem\",\r\n    marginBottom:\"2rem\",\r\n  },\r\n  my3:{\r\n    marginTop:\"3rem\",\r\n    marginBottom:\"3rem\",\r\n  },\r\n  my4:{\r\n    margin:'4rem auto',\r\n  },\r\n  pyTab:{\r\n    padding:\"4rem 0.3rem 4rem\",\r\n  },\r\n  personContainer:{\r\n    margin:'8rem 0 2rem',\r\n  },\r\n  navLink:{\r\n    color:theme.palette.text.primary,\r\n    textDecoration:'none',\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 200,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  scrollTop:{\r\n  position:\"fixed\",\r\n  bottom:\"5%\",\r\n  right:\"5%\",\r\n  padding:0,\r\n  boxShadow:\"0 15px 20px rgba(0,0,0,0.2)\",\r\n  transform:\"scale(0)\",\r\n  zIndex:300,\r\n  transition:\"300ms linear\"\r\n  },\r\n  themeToggler:{\r\n    position:\"fixed\",\r\n    bottom:\"5%\",\r\n    left:\"5%\",\r\n    padding:0,\r\n    boxShadow:\"0 15px 20px rgba(0,0,0,0.2)\",\r\n    zIndex:300,\r\n    transition:\"300ms linear\"\r\n    },\r\n  m1:{\r\n    margin:16\r\n  }\r\n}));","import {Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { Rating, Skeleton } from '@material-ui/lab';\r\nimport React from 'react'\r\nimport LazyLoad from \"react-lazy-load\";\r\nimport imgPlaceholder from \"../../images/img-placeholder.jpg\";\r\nimport ImageLoader from \"../../common/ImageLoader\";\r\nimport useStyles from \"../../common/Styles\";\r\n\r\nconst tmdbPosterPath = 'https://image.tmdb.org/t/p/w300_and_h450_face/';\r\nconst tmdbBackdropPath = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst SliderItem = (props) => {\r\n  const {movie,history} = props;\r\n  const classes = useStyles();\r\n  return (\r\n      <div className={classes.containerWrapper}>\r\n        <div className={classes.containerBackdrop}>\r\n        </div>\r\n        <img \r\n                alt=\"\"\r\n                src={tmdbBackdropPath + movie.backdrop_path} \r\n                className={classes.img}\r\n            />\r\n        <Grid container justify=\"center\" alignItems=\"center\" className={classes.sliderConent}>\r\n        <Grid item xs={12} container md={5} justify=\"center\" alignItems=\"center\">\r\n            {movie.id ? (\r\n              <img\r\n              alt={movie.original_title || movie.original_name || movie.title}\r\n              src={movie.poster_path ? `${tmdbPosterPath + movie.poster_path}` : imgPlaceholder}\r\n              className={classes.viewPoster}></img>\r\n              ) : <Skeleton variant=\"rect\" animation=\"wave\" className={classes.viewPoster}/>}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={5}>\r\n            \r\n          <Typography variant=\"h4\" align=\"center\" className={classes.title}>{movie.id ? movie.original_title :\r\n          <Skeleton animation=\"wave\" variant=\"rect\" width=\"200px\" height=\"3rem\" className={classes.viewButton}></Skeleton>}</Typography>\r\n          {movie.id ?\r\n          <Typography align=\"center\" className={classes.ratings}>Ratings:   \r\n          <Rating readOnly max={1} precision={0.1} value={1}></Rating>\r\n          &nbsp;{movie.vote_average}</Typography> : <Skeleton animation=\"wave\" variant=\"h4\" className={classes.ratings} />}\r\n          {\r\n            movie.id ? \r\n          <Typography align=\"center\" className={classes.movieOverview}>{movie.overview}</Typography>\r\n          : <React.Fragment> \r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n</React.Fragment>\r\n}\r\n {  movie.id ?\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Button  variant=\"contained\" color=\"primary\" fullWidth\r\n          onClick={() => history.push(`/view/movie/${movie.id}`)}\r\n          className={classes.viewButton}>View Movie</Button>\r\n          </Grid>:\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Skeleton animation=\"wave\" variant=\"rect\" height=\"3rem\" width={\"15rem\"}/>\r\n          </Grid>\r\n}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default SliderItem\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport Slider from 'react-slick';\r\nimport \"../../App.css\";\r\nimport SliderItem from './SliderItem';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"../../App.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  movie_slider_wrapper:{\r\n    position:\"relative\",\r\n    width:\"100%\",\r\n  },\r\n}));\r\n\r\nconst MovieSlider = (props) => {\r\n  const classes = useStyles();\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 800,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 10000,\r\n    draggable: true,\r\n    easing: 'easeInOutQuad',\r\n    fade: true,\r\n    adaptiveHeight:false,\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Slider {...settings} className={classes.movie_slider_wrapper} >\r\n          {props.movies.map((movie, index) => (\r\n            <SliderItem \r\n                key={movie.id || `movie_slider${index}`} \r\n                movie={movie}\r\n                history={props.history}\r\n             />\r\n            ))}\r\n      </Slider>\r\n    </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default MovieSlider\r\n","import { Card, CardActionArea, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\r\nimport { Rating, Skeleton } from '@material-ui/lab';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport imgPlaceholder from '../../images/img-placeholder.jpg';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  root: {\r\n    minHeight:280,\r\n    padding:0,\r\n  },\r\n  link:{\r\n    textDecoration:\"none\",\r\n    height:\"100%\",\r\n    width:\"100%\",\r\n    color:theme.palette.text.primary,\r\n  },\r\n  p0:{\r\n    padding:\"0 0.5rem\",\r\n  },\r\n  my1:{\r\n    margin:\"0.5rem auto\",\r\n    fontSize:16\r\n  }\r\n}));\r\n\r\n/* eslint camelcase: 0 */\r\nconst MovieCard = ({ movie,category}) => {\r\n  const classes = useStyles();\r\n  const {\r\n    id,\r\n    poster_path,\r\n    original_name,\r\n    original_title,\r\n    release_date,\r\n    first_air_date,\r\n    vote_average,\r\n    title\r\n  } = movie;\r\n  const dispatch = useDispatch();\r\n  const tmdbPosterPath = 'https://image.tmdb.org/t/p/w185_and_h278_face/';\r\n  const onClickCard = (e) => {\r\n    // prevent clicking of movie cards if loading \r\n    // if (isLoading) {\r\n    //   e.preventDefault();\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <NavLink to={`/view/${category}/${id}`} className={classes.link}>\r\n        {id ?\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={original_title || original_name || title || 'Not Available'}\r\n          height=\"250\"\r\n          image={poster_path ? `${tmdbPosterPath + poster_path}` : imgPlaceholder}\r\n          title={original_title || original_name || title || 'Not Available'}\r\n        /> : <Skeleton animation=\"wave\" variant=\"rect\" height={200} width={\"100%\"} />\r\n}\r\n        <CardContent className={classes.p0}>\r\n          {id?\r\n          <Rating className={classes.my1} value={vote_average} readOnly size=\"small\" max={10}></Rating>\r\n          :<Skeleton animation=\"wave\" ></Skeleton>}\r\n          {id ? \r\n          <Typography align=\"center\" className={classes.my1} variant=\"body\">\r\n          {original_title || original_name || title || 'Not Available'}\r\n          </Typography> : \r\n            <Skeleton className={classes.my1} animation=\"wave\"></Skeleton>\r\n  }\r\n          {id?\r\n          <Typography align=\"center\" variant=\"body2\" className={classes.my1} color=\"textSecondary\" component=\"p\">\r\n            {release_date || first_air_date}\r\n          </Typography>\r\n          : <Skeleton className={classes.my1} animation=\"wave\"></Skeleton>}\r\n        </CardContent>\r\n        </NavLink> \r\n      </CardActionArea>\r\n    </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import { Container, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport MovieCard from './MovieCard';\r\n\r\n// templateCount = number of items shown blank as loading template\r\nconst MovieList = ({ movies,templateCount,category,sm=3,md=2,lg=2}) => {\r\n\treturn (\r\n    <Container>\r\n\t\t<Grid container alignItems=\"center\" justify=\"center\" spacing={2}>\r\n\t\t\t{!movies && templateCount != 0 ? new Array(templateCount).fill({}).map((item, index) => (\r\n        <Grid item xs={6} sm={sm} md={md} lg={lg} key={`skeleton_movie_${index}`}>\r\n\t\t\t\t<MovieCard\r\n\t\t\t\t\tmovie={{}}\r\n\t\t\t\t/>\r\n        </Grid>\r\n\t\t\t)) : movies.map((movie, index) => (\r\n        <Grid item xs={6} sm={sm} md={md} lg={lg} key={`skeleton_movie_${index}`}>\r\n\t\t\t\t<MovieCard\r\n\t\t\t\t\tmovie={movie}\r\n\t\t\t\t\tcategory={category}\r\n\t\t\t\t/>\r\n        </Grid>\r\n\t\t\t))}\r\n\t\t</Grid>\r\n    </Container>\r\n\t);\r\n};\r\n\r\nMovieList.defaultProps = {\r\n\ttemplateCount: 12,\r\n\tcategory: 'movie',\r\n};\r\n\r\nexport default MovieList;\r\n","import { useLayoutEffect } from 'react';\r\n\r\nconst useDocumentTitle = (title) => {\r\n    useLayoutEffect(() => {\r\n        if (title) {\r\n            document.title = title;\r\n        } else {\r\n            document.title = 'Movies-Ark | Movie Browser';\r\n        }\r\n    }, [title]);\r\n};\r\n\r\nexport default useDocumentTitle;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {isEmpty} from \"../helpers/helperFunctions\";\r\nimport * as actions from \"../store/actions/movieActions\";\r\nimport MovieSlider from '../components/slider/MovieSlider';\r\nimport { Button, Container, Divider, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport MovieList from '../components/Movies/MovieList';\r\nimport useStyles from '../common/Styles';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\n\r\nconst Home = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    popularMovies,\r\n    topRatedMovies,\r\n    upcomingMovies,\r\n  } = useSelector(state => ({\r\n    popularMovies: state.movies.popularMovies,\r\n    topRatedMovies: state.movies.topRatedMovies,\r\n    upcomingMovies: state.movies.upcomingMovies,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  useDocumentTitle();\r\n  useEffect(() => {\r\n    if (isEmpty(popularMovies) ||\r\n      isEmpty(topRatedMovies) ||\r\n      isEmpty(upcomingMovies)\r\n    ) {\r\n      dispatch(actions.fetchMainMovies());\r\n    }\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      {popularMovies.results ? (\r\n        <MovieSlider\r\n          movies={popularMovies.results || []}\r\n          history={props.history}\r\n        />\r\n      ) : (\r\n          <MovieSlider\r\n            movies={[{}]}\r\n            history={props.history}\r\n          />\r\n        )}\r\n        {\r\n          upcomingMovies.results && (\r\n            <Container className={classes.my1}>\r\n              <Typography variant=\"h4\" align=\"center\">Upcoming Movies</Typography>\r\n              <MovieList movies={upcomingMovies.results.slice(0,12)} templateCount={12}/>\r\n              <Grid container justify=\"center\">\r\n              <Button variant=\"contained\" \r\n              color=\"primary\"\r\n              onClick={() => props.history.push('/upcoming')}\r\n              className={classes.viewButton}\r\n              >View All Upcoming Movies</Button>\r\n              </Grid>\r\n            </Container>\r\n          )\r\n        }\r\n        <Divider></Divider>\r\n        {\r\n          topRatedMovies.results && (\r\n            <Container className={classes.my3}>\r\n              <Typography variant=\"h4\" align=\"center\">Top Rated Movies</Typography>\r\n              <MovieList movies={topRatedMovies.results.slice(0,12)}/>\r\n              <Grid container justify=\"center\">\r\n              <Button variant=\"contained\" \r\n              color=\"primary\"\r\n              onClick={() => props.history.push('/top_rated')}\r\n              className={classes.viewButton}\r\n              >View All Top Rated Movies</Button>\r\n              </Grid>\r\n            </Container>\r\n          )\r\n        }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { FETCH_GENRES, FETCH_GENRE_CATEGORY } from './actions';\r\n\r\nexport const fetchGenres = (query, page = 1) => ({\r\n  type: FETCH_GENRES,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const fetchGenreCategory = (query, page = 1) => ({\r\n  type: FETCH_GENRE_CATEGORY,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n","import { FETCH_SELECTED_PERSON, FETCH_PEOPLE } from './actions';\r\n\r\nexport const fetchSelectedPerson = id => ({\r\n  type: FETCH_SELECTED_PERSON,\r\n  payload: id\r\n});\r\n\r\nexport const fetchPeople = (query, page = 1) => ({\r\n  type: FETCH_PEOPLE,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n","import * as action from './actions';\r\n\r\nexport const search = query => ({\r\n  type: action.SEARCH,\r\n  payload: {\r\n    query\r\n  }\r\n});\r\n\r\nexport const searchTvShows = (query, page = 1) => ({\r\n  type: action.SEARCH_TV_SHOWS,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const searchPeople = (query, page = 1) => ({\r\n  type: action.SEARCH_PEOPLE,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const searchMovies = (query, page = 1) => ({\r\n  type: action.SEARCH_MOVIES,\r\n  payload: {\r\n    query,\r\n    page\r\n  }\r\n});\r\n\r\nexport const updateSearchQuery = query => ({\r\n  type: action.UPDATE_SEARCH_QUERY,\r\n  payload: {\r\n    query\r\n  }\r\n});\r\n\r\nexport const addSearchHistory = search => ({\r\n  type: action.ADD_SEARCH_HISTORY,\r\n  payload: search\r\n});\r\n\r\nexport const clearSearchHistory = () => ({\r\n  type: action.CLEAR_SEARCH_HISTORY\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Divider, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport {fetchUpcomingMovies} from '../store/actions/index';\r\nimport MovieList from '../components/Movies/MovieList';\r\nimport {isEmpty,numberWithCommas} from '../helpers/helperFunctions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  mt1:{\r\n    margin:\"1rem auto 0\",\r\n  },\r\n  my4:{\r\n    margin:'4rem auto',\r\n  }\r\n}));\r\n\r\nconst UpcomingMovies = ({movies}) => {\r\n  const classes = useStyles();\r\n  let { upcomingMovies} = useSelector(state => ({\r\n    upcomingMovies: state.movies.upcomingMovies,\r\n  }));\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const queryString = '/movie/upcoming';\r\n  useDocumentTitle('Upcoming Movies | MOVIESARK');\r\n  useEffect(() => {\r\n    if (isEmpty(upcomingMovies)) {\r\n      dispatch(fetchUpcomingMovies(queryString, currentPage));\r\n    }\r\n  }, []);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    if (upcomingMovies.page !== page) {\r\n      upcomingMovies=null;\r\n      setCurrentPage(page);\r\n      dispatch(fetchUpcomingMovies(queryString, page));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.my4}>\r\n      <Typography variant=\"h3\">Upcoming Moives</Typography>\r\n      <Typography variant=\"h6\">Movies {numberWithCommas(upcomingMovies.total_results)}</Typography>\r\n      <Divider></Divider>\r\n      {upcomingMovies ? \r\n      <MovieList movies={upcomingMovies.results}></MovieList> :\r\n      <MovieList templateCount={12} movies={[]}/>\r\n      }\r\n    <Grid container justify=\"center\" alignItems=\"center\" className={classes.mt1}>\r\n      <Pagination\r\n      count={upcomingMovies.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Divider, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport {fetchTopRatedMovies} from '../store/actions/index';\r\nimport MovieList from '../components/Movies/MovieList';\r\nimport {isEmpty} from '../helpers/helperFunctions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  mt1:{\r\n    margin:\"1rem auto 0\",\r\n  },\r\n  my4:{\r\n    margin:'4rem auto',\r\n  }\r\n}));\r\n\r\nconst TopRatedMovies = ({movies,categories}) => {\r\n  const classes = useStyles();\r\n  let { topRatedMovies} = useSelector(state => ({\r\n    topRatedMovies: state.movies.topRatedMovies,\r\n  }));\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const queryString = '/movie/top_rated';\r\n  useDocumentTitle('Top Rated Movies | MOVIESARK');\r\n  useEffect(() => {\r\n    if (isEmpty(topRatedMovies)) {\r\n      dispatch(fetchTopRatedMovies(queryString, currentPage));\r\n    }\r\n  }, []);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    if (topRatedMovies.page !== page) {\r\n      topRatedMovies=null;\r\n      setCurrentPage(page);\r\n      dispatch(fetchTopRatedMovies(queryString, page));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.my4}>\r\n      <Typography variant=\"h3\">Top Rated Moives</Typography>\r\n      <Typography variant=\"h6\">Movies {topRatedMovies.total_results}</Typography>\r\n      <Divider></Divider>\r\n      {topRatedMovies ? \r\n      <MovieList movies={topRatedMovies.results}></MovieList> :\r\n      <MovieList templateCount={12} movies={[]}/>\r\n      }\r\n    <Grid container justify=\"center\" alignItems=\"center\" className={classes.mt1}>\r\n      <Pagination\r\n      count={topRatedMovies.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovies;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Divider, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport {fetchTrendingMovies} from '../store/actions/index';\r\nimport MovieList from '../components/Movies/MovieList';\r\nimport {isEmpty,numberWithCommas} from '../helpers/helperFunctions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport useStyles from '../common/Styles';\r\n\r\nconst TrendingMovies = ({movies}) => {\r\n  const classes = useStyles();\r\n  let { trendingMovies} = useSelector(state => ({\r\n    trendingMovies: state.movies.trendingMovies,\r\n  }));\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const query = '/trending/all/day';\r\n\r\n  useDocumentTitle('Trending Movies | MOVIESARK');\r\n  useEffect(() => {\r\n    if (isEmpty(trendingMovies)) {\r\n      dispatch(fetchTrendingMovies(query, currentPage));\r\n    }\r\n  }, []);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    if (trendingMovies.page !== page) {\r\n      trendingMovies=null;\r\n      setCurrentPage(page);\r\n      dispatch(fetchTrendingMovies(query, page));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.py4}>\r\n      <Typography variant=\"h4\">Trending Moives</Typography>\r\n      <Typography variant=\"h6\">Movies {numberWithCommas(trendingMovies.total_results)}</Typography>\r\n      <Divider className={classes.mt1}></Divider>\r\n      {trendingMovies ? \r\n      <MovieList templateCount={12} movies={trendingMovies.results}></MovieList> :\r\n      <MovieList templateCount={12} movies={[]}/>\r\n      }\r\n    <Grid container justify=\"center\" alignItems=\"center\" className={classes.mt1}>\r\n      <Pagination\r\n      count={trendingMovies.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TrendingMovies;\r\n","import { Button, Container, Grid, Modal, Typography } from '@material-ui/core';\r\nimport { Rating, Skeleton } from '@material-ui/lab';\r\nimport React, { useState } from 'react'\r\nimport ModalVideo from 'react-modal-video';\r\nimport { useDispatch } from 'react-redux';\r\nimport imgPlaceholder from '../../images/img-placeholder.jpg';\r\nimport {getCSSVar,getYear,isEmpty} from '../../helpers/helperFunctions';\r\nimport useStyles from '../../common/Styles';\r\nimport \"../../../node_modules/react-modal-video/css/modal-video.min.css\";\r\n\r\n\r\nconst tmdbPosterPath = 'https://image.tmdb.org/t/p/w300_and_h450_face/';\r\nconst tmdbBackdropPath = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst MovieOverview = ({movie,history}) => {\r\n  const classes = useStyles();\r\n  const [isOpenModal, setOpenModal] = useState(false);\r\n  const [isOpenVideoModal, setOpenVideoModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const youtube = 'https://www.youtube.com/results?search_query=';\r\n  const modalStyle = {\r\n    modal: {\r\n      background: '#0f1214',\r\n      padding: '50px',\r\n      textAlign: 'center',\r\n      borderRadius: '6px'\r\n    },\r\n    closeButton: {\r\n      top: '10px',\r\n      right: '10px'\r\n    },\r\n    closeIcon: {\r\n      fill: '#fff'\r\n    }\r\n  };\r\n\r\n  const openVideoModal = () => {\r\n    console.log(movie.videos.results);\r\n    if (movie.videos.results.length >= 1) {\r\n      setOpenVideoModal(true);\r\n    } else {\r\n      setOpenModal(true);\r\n    }\r\n  };\r\n\r\n  const closeVideoModal = () => setOpenVideoModal(false);\r\n\r\n  const openModal = () => setOpenModal(false);\r\n\r\n  const closeModal = () => setOpenModal(false);\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.containerWrapper}>\r\n      <ModalVideo\r\n        channel=\"youtube\"\r\n        modalVideo=\"movie-modal-video\"\r\n        isOpen={isOpenVideoModal}\r\n        onClose={closeVideoModal}\r\n        playlist={isEmpty(movie) ? null : movie.videos.results[0] ? movie.videos.results.map(video => video.key) : null}\r\n        videoId={isEmpty(movie) ? null : movie.videos.results[0] ? movie.videos.results[0].key : null}\r\n        className={classes.modalVideo}\r\n      />\r\n      <Modal\r\n        onClose={closeModal}\r\n        open={isOpenModal}\r\n      >\r\n        <React.Fragment>\r\n        <h2>No Trailer Found</h2>\r\n        <p>View in youtube instead</p>\r\n        <a\r\n          className={classes.modalLink}\r\n          href={`${youtube + movie.original_title + getYear(movie.release_date)}`}\r\n          target=\"_blank\">\r\n          Search in Youtube\r\n        </a>\r\n        </React.Fragment>\r\n      </Modal>\r\n        <div className={classes.containerBackdrop}>\r\n        </div>\r\n        <img \r\n                alt=\"\"\r\n                src={tmdbBackdropPath + movie.backdrop_path} \r\n                className={classes.img}\r\n            />\r\n        <Grid container justify=\"center\" alignItems=\"center\" className={classes.sliderConent}>\r\n        <Grid container item xs={12} md={3} justify=\"center\" alignItems=\"center\"  className={classes.mainGrid}>\r\n            {movie.id ? (\r\n              <img\r\n              alt={movie.original_title || movie.original_name || movie.title}\r\n              src={movie.poster_path ? `${tmdbPosterPath + movie.poster_path}` : imgPlaceholder}\r\n              className={classes.viewPoster}></img>\r\n              ) : <Skeleton variant=\"rect\" animation=\"wave\" width={\"300px\"} height={\"450px\"}/>}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={7}>\r\n            <Container>\r\n            {movie.id ?\r\n          <Typography variant=\"h1\"  className={classes.title}>{movie.original_title}</Typography> : <Skeleton animation=\"wave\" variant=\"h1\"></Skeleton>}\r\n          {movie.id ?\r\n          <Typography  className={classes.ratings}>Ratings:   \r\n          <Rating readOnly max={1} precision={0.1} value={1}></Rating>\r\n          &nbsp;{movie.vote_average}</Typography> : <Skeleton animation=\"wave\" variant=\"h4\"/>}\r\n          {movie.id ? (movie.id && movie.genres.length >= 1) &&\r\n                  <Typography  className={classes.ratings}>\r\n                    {movie.genres.map((genre, index) => (\r\n                      <span key={`${movie.id}_genre${genre.id}`}>{genre.name} {(index < (movie.genres.length - 1)) && '/ '}</span>\r\n                    ))}\r\n                  </Typography>:\r\n                  <Skeleton variant=\"h5\"></Skeleton>\r\n          }\r\n          {\r\n            movie.id ? \r\n          <Typography variant=\"h6\" >{movie.overview}</Typography>\r\n          : <React.Fragment> \r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n            <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n</React.Fragment>\r\n}\r\n {  movie.id ?\r\n          <Button  variant=\"contained\" color=\"primary\" fullWidth className={classes.viewButton}\r\n           onClick={openVideoModal}\r\n          >Watch Trailer</Button>\r\n          : <Skeleton animation=\"wave\" variant=\"rect\" height=\"3rem\" width={\"15rem\"}/>\r\n}\r\n</Container>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default MovieOverview\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useDidMount = () => {\r\n  const [didMount, setDidMount] = useState(false);\r\n  useEffect(() => setDidMount(true), []);\r\n\r\n  return didMount;\r\n};\r\n\r\nexport default useDidMount;\r\n","import { Card, CardActionArea, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\r\nimport { Rating, Skeleton } from '@material-ui/lab';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport imgPlaceholder from '../../images/img-placeholder.jpg';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  root: {\r\n    minHeight:300,\r\n    backgroundColor:\"#111111\",\r\n    padding:0,\r\n  },\r\n  link:{\r\n    textDecoration:\"none\",\r\n    height:\"100%\",\r\n    width:\"100%\",\r\n    color:theme.palette.text.primary,\r\n  },\r\n  name:{\r\n    fontSize:'0.8rem',\r\n    fontWeight:'600',\r\n  }\r\n}));\r\n\r\n/* eslint camelcase: 0 */\r\nconst PeopleCard = ({ people,category}) => {\r\n  const classes = useStyles();\r\n  const {\r\n    id,\r\n    profile_path,\r\n    name,\r\n    character\r\n  } = people;\r\n  const tmdbPosterPath = 'https://image.tmdb.org/t/p/w185_and_h278_face/';\r\n  const dispatch = useDispatch();\r\n  const onClickCard = (e) => {\r\n    // prevent clicking of movie cards if loading \r\n    // if (isLoading) {\r\n    //   e.preventDefault();\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <NavLink to={`/view/person/profile/${id}`} className={classes.link}>\r\n        {id ?\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={name}\r\n          height=\"250\"\r\n          image={profile_path ? `${tmdbPosterPath + profile_path}` : imgPlaceholder}\r\n          title={name}\r\n        /> : <Skeleton animation=\"wave\" variant=\"rect\" height={200} width={\"100%\"} />\r\n}\r\n        <CardContent>\r\n          {id ? \r\n          <Typography gutterBottom className={classes.name}>\r\n          {name}\r\n          </Typography> : \r\n            <Skeleton animation=\"wave\"></Skeleton>\r\n  }\r\n          {id?\r\n          <Typography noWrap variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {character}\r\n          </Typography>\r\n          : <Skeleton animation=\"wave\"></Skeleton>}\r\n        </CardContent>\r\n        </NavLink> \r\n      </CardActionArea>\r\n    </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PeopleCard;\r\n","import { Container, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport PeopleCard from './PeopleCard';\r\n\r\n// templateCount = number of items shown blank as loading template\r\nconst PeopleList = ({ people, templateCount,xs=6, sm=3, md=3, lg=2 }) => {\r\n\treturn (\r\n    <Container>\r\n\t\t<Grid container alignItems=\"center\" justify=\"center\" spacing={2}>\r\n\t\t\t{!people && templateCount != 0 ? new Array(templateCount).fill({}).map((item, index) => (\r\n        <Grid item xs={xs} sm={sm} md={md} lg={lg}\r\n        key={`skeleton_people_${index}`}\r\n        >\r\n        <PeopleCard\r\n          category=\"people\"\r\n          people={{}}\r\n        />\r\n        </Grid>\r\n      )) : people.map((person, index) => (\r\n        <Grid item xs={xs} sm={sm} md={md} lg={lg}\r\n        key={`${person.id}_${index}`}\r\n        >\r\n        <PeopleCard\r\n          category=\"people\"\r\n          people={person}\r\n        />\r\n        </Grid>\r\n      ))}\r\n\t\t</Grid>\r\n    </Container>\r\n\t);\r\n};\r\n\r\nPeopleList.defaultProps = {\r\n\ttemplateCount: 0,\r\n\tcategory: 'movie',\r\n\tgridClass: 'grid'\r\n};\r\n\r\nexport default PeopleList;\r\n","import { Fab, FormControl, Grid, Hidden, InputLabel, makeStyles, Menu, MenuItem, Select } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {setGenreFilter,setSortFilter,setYearFilter} from '../../store/actions/index';\r\nimport { FilterListRounded } from '@material-ui/icons';\r\n\r\n\r\nconst yearToday = new Date().getFullYear();\r\nconst years = [];\r\n\r\nfor (let i = yearToday; i >= 1883; i--) {\r\n  years.push(i);\r\n}\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  formControl:{\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Filter = (props) => {\r\n  const [y, setYear] = React.useState('');\r\n  const [anchorEl,setAnchorEl] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const { filterCategory, filterData } = props;\r\n  const { year, sort, genre } = filterData;\r\n  const classes = useStyles();\r\n  \r\n  const onFilterToggle = () => {\r\n    document.body.classList.toggle('is-filter-open');\r\n  };\r\n\r\n  const onYearFilterChange = (e) => {\r\n    const selected = e.target.value;\r\n    setYear(selected);\r\n    dispatch(setYearFilter(selected, filterCategory));\r\n  };\r\n\r\n  const onSortFilterChange = (e) => {\r\n    const selected = e.target.value;\r\n    dispatch(setSortFilter(selected, filterCategory));\r\n  };\r\n\r\n  const onGenreFilterChange = (e) => {\r\n    const selected = e.target.value;\r\n    dispatch(setGenreFilter(selected, filterCategory));\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const movieSortFilter = <Grid item xs={8} sm={4}>\r\n  <FormControl className={classes.formControl}>\r\n  <InputLabel id=\"movie-sort-filter\">Sort By</InputLabel>\r\n  <Select\r\n    labelId=\"movie-sort-filter\"\r\n    id=\"sort-filter\"\r\n    value={sort}\r\n    onChange={onSortFilterChange}\r\n    displayEmpty\r\n    className={classes.selectEmpty}\r\n  >\r\n      <MenuItem value=\"popularity.desc\">Popularity Desc</MenuItem>\r\n      <MenuItem value=\"popularity.asc\">Popularity Asc</MenuItem>\r\n      <MenuItem value=\"release_date.desc\">Release Date Desc</MenuItem>\r\n      <MenuItem value=\"release_date.asc\">Release Date Asc</MenuItem>\r\n      <MenuItem value=\"vote_count.desc\">Vote Desc</MenuItem>\r\n      <MenuItem value=\"vote_count.asc\">Vote Asc</MenuItem>\r\n      <MenuItem value=\"original_title.asc\">Title (A-Z)</MenuItem>\r\n      <MenuItem value=\"original_title.desc\">Title (Z-A)</MenuItem>\r\n  </Select>\r\n  </FormControl>\r\n</Grid>\r\n\r\nconst yearSortFilter =       <Grid item xs={8} sm={4}>\r\n<FormControl className={classes.formControl}>\r\n<InputLabel id=\"movie-year-filter\">Year</InputLabel>\r\n<Select\r\n  labelId=\"movie-year-filter\"\r\n  id=\"year-filter\"\r\n  value={year}\r\n  onChange={onYearFilterChange}\r\n  displayEmpty\r\n  className={classes.selectEmpty}\r\n>\r\n  {years.map((year)=><MenuItem value={year} key={year}>{year}</MenuItem>)}\r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\nconst genreSortFilter =       <Grid item xs={8} sm={4}>\r\n<FormControl className={classes.formControl}>\r\n<InputLabel id=\"movie-genre-filter\">Genre</InputLabel>\r\n<Select\r\n  labelId=\"movie-genre-filter\"\r\n  id=\"genre-filter\"\r\n  value={genre}\r\n  onChange={onGenreFilterChange}\r\n  displayEmpty\r\n  className={classes.selectEmpty}\r\n>\r\n    <MenuItem value=\"28\">Action</MenuItem>\r\n    <MenuItem value=\"12\">Adventure</MenuItem>\r\n    <MenuItem value=\"16\">Animation</MenuItem>\r\n    <MenuItem value=\"35\">Comedy</MenuItem>\r\n    <MenuItem value=\"80\">Crime</MenuItem>\r\n    <MenuItem value=\"99\">Documentary</MenuItem>\r\n    <MenuItem value=\"18\">Drama</MenuItem>\r\n    <MenuItem value=\"10751\">Family</MenuItem>\r\n    <MenuItem value=\"14\">Fantasy</MenuItem>\r\n    <MenuItem value=\"36\">History</MenuItem>\r\n    <MenuItem value=\"27\">Horror</MenuItem>\r\n    <MenuItem value=\"10402\">Music</MenuItem>\r\n    <MenuItem value=\"9648\">Mystery</MenuItem>\r\n    <MenuItem value=\"10749\">Romance</MenuItem>\r\n    <MenuItem value=\"878\">Sci-Fi</MenuItem>\r\n    <MenuItem value=\"10770\">TV Movie</MenuItem>\r\n    <MenuItem value=\"53\">Thriller</MenuItem>\r\n    <MenuItem value=\"10752\">War</MenuItem>\r\n    <MenuItem value=\"37\">Western</MenuItem>\r\n</Select>\r\n</FormControl>\r\n</Grid>;\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n      <Hidden mdUp>\r\n      <Fab onClick={handleClick} aria-controls=\"simple-menu\" color=\"primary\" aria-label=\"edit\">\r\n      <FilterListRounded></FilterListRounded>\r\n      </Fab>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>\r\n      {yearSortFilter}\r\n      </MenuItem>\r\n      <MenuItem onClick={handleClose}>\r\n      {genreSortFilter}\r\n      </MenuItem>\r\n      <MenuItem onClick={handleClose}>\r\n      {movieSortFilter}\r\n      </MenuItem>\r\n      </Menu>\r\n      </Hidden>\r\n  <Hidden smDown>\r\n  {yearSortFilter}\r\n    {genreSortFilter}\r\n    {movieSortFilter}\r\n    </Hidden>\r\n    </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import { Button, Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport {numberWithCommas, toHrsMins} from '../../helpers/helperFunctions';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  mb1:{marginBottom:\"0.2rem\"},\r\n  my1:{margin:\"1rem auto\"},\r\n  homepage:{width:\"50%\"},\r\n}));\r\n\r\nconst MovieDetails = ({ movie, keywords, history }) => {\r\n  const classes = useStyles();\r\n  return (\r\n      <Container>\r\n      {movie.genres && <React.Fragment>\r\n        <Typography variant=\"h6\" className={classes.mb1}>Genre</Typography>\r\n        <Grid className={classes.my1} container justify=\"space-around\" alignItems=\"center\" spacing={3}>\r\n      {movie.genres.map((genre) => {\r\n          const genreName = genre.name.toLowerCase().replace(' ', '-');\r\n          return (\r\n            <Grid item xs={6} key={genre.id+genre.name}>\r\n                      <Button\r\n                      variant=\"outlined\" \r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      onClick={() => history.push(`/genre/${genreName}/${genre.id}`)}\r\n                      >{genre.name}</Button>\r\n             </Grid>\r\n          );\r\n        })}\r\n        </Grid>\r\n        </React.Fragment>}\r\n      {movie.homepage && (\r\n      <div className={classes.my1}>\r\n        <Typography variant=\"h6\">Homepage</Typography>\r\n        <Button variant=\"text\" href={movie.homepage} className={classes.homepage}>\r\n        🌏 &nbsp; Visit\r\n        </Button>\r\n      </div>\r\n    )}\r\n          {movie.release_date && (\r\n      <div className={classes.my1}>\r\n        <Typography variant=\"h6\">Release Date</Typography>\r\n        <Typography variant=\"subtitle1\">{movie.release_date}</Typography>\r\n      </div>\r\n    )}\r\n    {movie.status && (\r\n      <div className={classes.my1}>\r\n        <Typography variant=\"h6\">Status</Typography>\r\n        <Typography variant=\"subtitle1\">{movie.status}</Typography>\r\n      </div>\r\n    )}\r\n    {movie.vote_average && (\r\n      <div className={classes.my1}>\r\n        <Typography variant=\"h6\">Rating</Typography>\r\n        <Typography variant=\"subtitle1\">★ {movie.vote_average}</Typography>\r\n      </div>\r\n    )}\r\n    {movie.budget>0 && (\r\n      <div className={classes.my1}>\r\n        <Typography variant=\"h6\">Budget</Typography>\r\n        <Typography variant=\"subtitle1\">${numberWithCommas(movie.budget)}</Typography>\r\n      </div>\r\n    )}\r\n    {movie.revenue>0 && (\r\n      <div className={classes.my1}>\r\n        <Typography variant=\"h6\">Revenue</Typography>\r\n        <Typography variant=\"subtitle1\">${numberWithCommas(movie.revenue)}</Typography>\r\n      </div>\r\n    )}\r\n    {movie.runtime && (\r\n      <div className={classes.my1}>\r\n        <Typography variant=\"h6\">Runtime</Typography>\r\n        <Typography variant=\"subtitle1\">{toHrsMins(movie.runtime)}</Typography>\r\n      </div>\r\n    )}\r\n    {keywords && keywords.length >= 1 && (\r\n      <div className={classes.my1}>\r\n        <Typography variant=\"h6\">Keywords</Typography>\r\n        <Grid className={classes.my1} container justify=\"space-around\" alignItems=\"center\" spacing={3}>\r\n        {keywords.slice(0,6).map(keyword => (\r\n                      <Grid item xs={6} key={keyword.id+keyword.name}>\r\n                      <Button\r\n                      variant=\"outlined\" \r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      onClick={() => history.push(`/search/movie/${keyword.name}`)}\r\n                      >#{keyword.name}</Button>\r\n             </Grid>\r\n        ))}\r\n        </Grid>\r\n      </div>\r\n    )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MovieDetails;\r\n","import { Button, Container, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport PeopleList from '../People/PeopleList';\r\nimport MovieDetails from '../Movies/MovieDetails';\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  my3:{margin:\"2rem auto\"},\r\n  my1:{margin:\"0.5rem auto 1.5rem\"},\r\n  button:{maxWidth:\"15rem\",margin:\"1rem auto\"},\r\n}));\r\n\r\nconst MovieCast = ({ casts, movie, keywords, history, match }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.my3}>\r\n      <Grid container justify=\"space-between\">\r\n        <Grid item xs={12} sm={8}>\r\n          <Typography variant=\"h4\" className={classes.my1}>Top Billed Cast</Typography>\r\n          <PeopleList \r\n              people={casts.slice(0, 12)} \r\n              sm={4}\r\n              md={3}\r\n              lg={3}\r\n              xs={6}\r\n          />\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Button variant=\"contained\" \r\n              color=\"primary\"\r\n              fullWidth\r\n              className={classes.button}\r\n              onClick={() => history.push(`/view/movie/${match.params.id}/casts`)}\r\n              size=\"large\"\r\n              >View All Casts</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n        <MovieDetails \r\n            keywords={keywords}\r\n            movie={movie}\r\n            history={history}\r\n        />\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MovieCast\r\n","import { Button, Card, CardActionArea, CardContent, CardMedia, CircularProgress, makeStyles } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport {downloadFileUrl} from '../../helpers/helperFunctions';\r\nimport { TMDB_POSTER_PATH, TMDB_POSTER_BASE } from '../../constants/constants';\r\nimport imgPlaceholder from '../../images/img-placeholder.jpg';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  root: {\r\n    padding:0,\r\n  },\r\n  p0:{padding:0},\r\n}));\r\n\r\nconst PosterCard = (props) => {\r\n  const classes = useStyles();\r\n  const [isDownloading, setIsDownloading] = useState(false);\r\n  const { file_path } = props.poster;\r\n\r\n  const download = () => {\r\n    setIsDownloading(true);\r\n    downloadFileUrl(`${TMDB_POSTER_BASE + file_path}`)\r\n      .then(() => setIsDownloading(false))\r\n      .catch((e) => {\r\n        setIsDownloading(false);\r\n        console.log(e);\r\n      });\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n    <CardActionArea>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"250\"\r\n        image={file_path ? `${TMDB_POSTER_PATH + file_path}` : imgPlaceholder} \r\n      />\r\n      <CardContent className={classes.p0}>\r\n        <Button \r\n        onClick={download} \r\n        fullWidth \r\n        color=\"secondary\" \r\n        size=\"large\"\r\n        variant=\"contained\"\r\n        disabled={isDownloading}\r\n        endIcon={isDownloading ? \r\n        <CircularProgress size={20} color=\"inherit\" />:\r\n          <GetAppIcon/>\r\n      }\r\n        >Download</Button>\r\n      </CardContent>\r\n    </CardActionArea>\r\n  </Card>\r\n  )\r\n}\r\n\r\nexport default PosterCard\r\n","import { Container, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport PosterCard from '../Poster/PosterCard';\r\nimport useStyles from '../../common/Styles';\r\n\r\nconst MoviePoster = ({id,posters}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" className={classes.my1}>View Posters</Typography>\r\n\t\t<Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n      {posters.map((poster,index)=>(     \r\n      <Grid item xs={6} sm={2} key={`${id}_poster${index}`}>   \r\n      <PosterCard\r\n      poster={poster}\r\n      />\r\n      </Grid>))}\r\n\t\t</Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MoviePoster\r\n","import { Container, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport MovieList from './MovieList';\r\n\r\nconst SimilarMovies = ({movies,category}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n      <Typography variant=\"h4\">Similar {category=='movie'? \"Movies\":\"Tv Shows\"}</Typography>\r\n      <MovieList \r\n      movies={movies}\r\n      category={category}\r\n      ></MovieList>\r\n      </Container>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SimilarMovies\r\n","import { Accordion, AccordionDetails, AccordionSummary, Container, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport useStyles from '../../common/Styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst Reviews = ({reviews}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.my1}>\r\n      <Typography variant=\"h4\" className={classes.my1}>Reviews</Typography>\r\n      {reviews.results.map((review,index)=>(\r\n        <Accordion key={`review_${review.id}`}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.reviewTitle}>{review.author}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            {review.content}\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Reviews\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MovieOverview from '../components/Movies/MovieOverview';\r\nimport useDidMount from '../hooks/useDidMount';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport {fetchSelectedMovie} from '../store/actions/index';\r\nimport MovieCast from '../components/Movies/MovieCast';\r\nimport { Button, Container, Grid } from '@material-ui/core';\r\nimport MoviePoster from '../components/Movies/MoviePoster';\r\nimport useStyles from '../common/Styles';\r\nimport SimilarMovies from '../components/Movies/SimilarMovies';\r\nimport Reviews from '../components/Movies/Reviews';\r\n\r\nconst ViewMovie = (props) => {\r\n  const classes = useStyles();\r\n  const {movie, casts, keywords, reviews } = useSelector(state => ({\r\n    movie: state.movies.current.movie,\r\n    casts: state.movies.current.casts,\r\n    keywords: state.movies.current.keywords,\r\n    reviews: state.movies.current.reviews,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const didMount = useDidMount();\r\n  const posters = movie.images ? movie.images.posters : [];\r\n\r\n  useDocumentTitle(movie.id ? `${movie.original_name || movie.original_title} | MOVIESARK` : 'View Movie | MOVX');\r\n  useEffect(() => {\r\n    const movieId = props.match.params.id;\r\n    fetchMovie(movieId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (didMount || !movie.id) {\r\n      fetchMovie(props.match.params.id);\r\n    }\r\n  }, [props.match.params.id]);\r\n\r\n  const fetchMovie = (id) => {\r\n    const { category } = props.match.params;\r\n\r\n    if (parseInt(id, 10) !== movie.id) {\r\n      dispatch(fetchSelectedMovie(category, id));\r\n    }\r\n  };\r\n\r\n  const onClickViewImage = () => {\r\n    props.history.push(`/view/movie/${props.match.params.id}/images`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MovieOverview movie={movie}></MovieOverview>\r\n      <MovieCast history={props.history} casts={casts} keywords={keywords} movie={movie}  />\r\n      {movie.images && (\r\n        <React.Fragment>\r\n          <MoviePoster\r\n            id={movie.id}\r\n            posters={posters.length > 10 ? posters.slice(0, 10) : posters}\r\n          />\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            onClick={onClickViewImage}\r\n            fullWidth\r\n            className={classes.viewButton}\r\n          >\r\n            View All Posters\r\n          </Button>\r\n          </Grid>\r\n        </React.Fragment>\r\n      )}\r\n            {movie.similar && (\r\n        <>\r\n          {movie.similar.results.length !== 0 && (\r\n            <SimilarMovies\r\n              movies={movie.similar.results}\r\n              category={props.match.params.category}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      {(reviews.results && !!reviews.total_pages) && (\r\n        <Reviews reviews={reviews} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewMovie\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const DarkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    background: {\r\n      default:\"#111111\"\r\n    }\r\n  },\r\n  typography:{\r\n    fontFamily:\"Open Sans, Patrick Hand\"\r\n  },\r\n});\r\n\r\nexport const LightTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    background: {\r\n      default:\"#CCCCCC\"\r\n    },\r\n  },\r\n  typography:{\r\n    fontFamily:\"Open Sans, Patrick Hand\",\r\n  },\r\n});","//@ts-check\r\nimport { useEffect, useLayoutEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport useDidMount from './useDidMount';\r\n\r\n/**\r\n * \r\n * @param {string} path \r\n */\r\n\r\nconst usePageSaver = (path) => {\r\n    const { pathname } = useLocation();\r\n    const p = path || pathname.replace('/', '');\r\n    const [currentPage, setCurrentPage] = useState(() => localStorage.moviesArkPage ? JSON.parse(localStorage.moviesArkPage)[p] : 1);\r\n    const didMount = useDidMount();\r\n\r\n    useLayoutEffect(() => {\r\n        if (localStorage.moviesArkPage) {\r\n            const moviesArkPage = JSON.parse(localStorage.getItem('moviesArkPage'));\r\n            const page = moviesArkPage[p];\r\n\r\n            if (typeof moviesArkPage[p] !== undefined) {\r\n                setCurrentPage(page);\r\n            }\r\n        } else {\r\n            localStorage.setItem('moviesArkPage', JSON.stringify({\r\n                [p]: currentPage\r\n            }));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (didMount) {\r\n            const moviesArkPage = JSON.parse(localStorage.getItem('moviesArkPage'));\r\n\r\n            localStorage.setItem('moviesArkPage', JSON.stringify({\r\n                ...moviesArkPage,\r\n                [p]: currentPage\r\n            }));\r\n        }\r\n    }, [currentPage]);\r\n\r\n    return { currentPage, setCurrentPage }\r\n\r\n};\r\n\r\nexport default usePageSaver;\r\n","import * as action from './actions';\r\n\r\nexport const setYearFilter = (year, target) => ({\r\n  type: action.SET_YEAR_FILTER,\r\n  payload: {\r\n    year,\r\n    target\r\n  }\r\n});\r\n\r\nexport const setSortFilter = (sort, target) => ({\r\n  type: action.SET_SORT_FILTER,\r\n  payload: {\r\n    sort,\r\n    target\r\n  }\r\n});\r\n\r\nexport const setGenreFilter = (genre, target) => ({\r\n  type: action.SET_GENRE_FILTER,\r\n  payload: {\r\n    genre,\r\n    target\r\n  }\r\n});\r\n\r\n","import { Container, Divider, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport useDidMount from '../hooks/useDidMount';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport usePageSaver from '../hooks/usePageSaver';\r\nimport {numberWithCommas, isEmpty} from '../helpers/helperFunctions';\r\nimport useStyles from '../common/Styles';\r\nimport MovieList from '../components/Movies/MovieList';\r\nimport Filter from '../components/Movies/Filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchDiscoverMovies} from '../store/actions/index'; \r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nconst DiscoverMovies = (props) => {\r\n  const classes = useStyles();\r\n  let {\r\n    discoverMovies,\r\n    filter,\r\n  } = useSelector((state) => ({\r\n    discoverMovies: state.movies.discoverMovies,\r\n    filter: state.filters,\r\n  }));\r\n\r\n  const { currentPage, setCurrentPage } = usePageSaver();\r\n  const query = '/discover/movie?';\r\n  const dispatch = useDispatch();\r\n\r\n  useDocumentTitle('Discover Movies | MOVIESARK');\r\n\r\n  useEffect(() => {\r\n      dispatch(fetchDiscoverMovies(`${query}${filter.discover.query}`, currentPage));\r\n  }, [filter.discover.query]);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    if (discoverMovies.page !== page) {\r\n      discoverMovies=null;\r\n      setCurrentPage(page);\r\n      dispatch(fetchDiscoverMovies(query, page));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.py4}>\r\n      <Grid container justify=\"space-around\" alignItems=\"center\">\r\n        <Grid item xs={5}>\r\n          <Typography variant=\"h4\" className={classes.my1}>Discover Movies</Typography>\r\n          <Typography variant=\"h6\">{numberWithCommas(discoverMovies.total_results)} Movies</Typography>\r\n        </Grid>\r\n        <Grid item xs={5} className={classes.my1}>\r\n        {discoverMovies.results && (\r\n          <Filter\r\n            filterCategory=\"discover\"\r\n            filterData={filter.discover}\r\n          />\r\n        )}\r\n        </Grid>\r\n        <Divider className={classes.my1}></Divider>\r\n        <MovieList\r\n        movies={discoverMovies.results}\r\n        templateCount={12}\r\n        ></MovieList>\r\n        <Grid container className={classes.my1} justify=\"center\" alignItems=\"center\">\r\n        <Pagination\r\n      count={discoverMovies.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DiscoverMovies\r\n","import { Container, Divider, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport useDidMount from '../hooks/useDidMount';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport usePageSaver from '../hooks/usePageSaver';\r\nimport {numberWithCommas, isEmpty} from '../helpers/helperFunctions';\r\nimport useStyles from '../common/Styles';\r\nimport MovieList from '../components/Movies/MovieList';\r\nimport Filter from '../components/Movies/Filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchTvShows} from '../store/actions/index'; \r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nconst TvShows = (props) => {\r\n  const classes = useStyles();\r\n  let { tvShows, filter } = useSelector(state => ({\r\n    tvShows: state.movies.tvShows,\r\n    filter: state.filters,\r\n  }));\r\n  const { currentPage, setCurrentPage } = usePageSaver();\r\n  const dispatch = useDispatch();\r\n  const didMount = useDidMount();\r\n  const query = '/discover/tv?language=en-US';\r\n\r\n  useDocumentTitle('TV Shows | MOVIESARK');\r\n  useEffect(() => {\r\n      console.log(filter.tv.query);\r\n      dispatch(fetchTvShows(`${query}${filter.tv.query}`, currentPage));\r\n  }, [filter.tv.query]);\r\n\r\n\r\n  const handlePageChange = (event, page) => {\r\n    if (tvShows.page !== page) {\r\n      tvShows=null;\r\n      setCurrentPage(page);\r\n      dispatch(fetchTvShows(query, page));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.py4}>\r\n      <Grid container justify=\"space-between\">\r\n        <Grid item xs={7}>\r\n          <Typography variant=\"h4\" className={classes.my1}>TV Shows</Typography>\r\n          <Typography variant=\"h6\">{numberWithCommas(tvShows.total_results)} TV Shows</Typography>\r\n        </Grid>\r\n        <Grid item xs={5} className={classes.my1}>\r\n        {tvShows.results && (\r\n          <Filter\r\n            filterCategory=\"tv\"\r\n            filterData={filter.tv}\r\n          />\r\n        )}\r\n        </Grid>\r\n        <Divider className={classes.my1}></Divider>\r\n        <MovieList\r\n        category=\"tv\"\r\n        movies={tvShows.results}\r\n        templateCount={12}\r\n        ></MovieList>\r\n        <Grid container className={classes.my1} justify=\"center\" alignItems=\"center\">\r\n        <Pagination\r\n      count={tvShows.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TvShows\r\n","import { Container, Divider, Grid, Typography } from '@material-ui/core'\r\nimport { Pagination } from '@material-ui/lab';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PeopleList from '../components/People/PeopleList';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport usePageSaver from '../hooks/usePageSaver';\r\nimport { fetchPeople } from '../store/actions';\r\nimport useStyles from '../common/Styles';\r\nimport { isEmpty, numberWithCommas } from '../helpers/helperFunctions';\r\n\r\nconst People = (props) => {\r\n  const classes = useStyles();\r\n  const { people } = useSelector((state) => ({\r\n    people: state.people.people,\r\n  }));\r\n  const { currentPage, setCurrentPage } = usePageSaver();\r\n  const dispatch = useDispatch();\r\n  const query = '/person/popular?';\r\n\r\n  useDocumentTitle('Discover People | MOVIESARK');\r\n  useEffect(() => {\r\n    if (isEmpty(people)) {\r\n      dispatch(fetchPeople(query, currentPage));\r\n    }\r\n  }, []);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    if (people.page !== page) {\r\n      setCurrentPage(page);\r\n      dispatch(fetchPeople(query, page));\r\n    }\r\n  };\r\n  return (\r\n    <Container className={classes.py4}>\r\n      <Typography variant=\"h4\">Popular People</Typography>\r\n      <Typography variant=\"h6\">{numberWithCommas(people.total_results)} People</Typography>\r\n      <Divider className={classes.mt1}></Divider>\r\n      {people ? \r\n      <PeopleList templateCount={12} sm={3} people={people.results}></PeopleList> :\r\n      <PeopleList templateCount={12} sm={2} people={[]}/>\r\n      }\r\n    <Grid container justify=\"center\" alignItems=\"center\" className={classes.mt1}>\r\n      <Pagination\r\n      count={people.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default People\r\n","export default __webpack_public_path__ + \"static/media/background.695a6f2a.jpg\";","import { Button, Container, Grid, Modal, Typography } from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport React from 'react'\r\nimport useStyles from '../../common/Styles';\r\nimport backgroundImg from '../../images/background.jpg';\r\n\r\n\r\nconst PersonBiography = ({actor,history}) => {\r\n  const classes = useStyles();\r\n  const tmdbPosterPath = 'https://image.tmdb.org/t/p/w300_and_h450_face/';\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onClickLink = () => {\r\n    history.push(`/view/person/profile/${actor.id}/images`);\r\n  };\r\n\r\n  return (\r\n  <React.Fragment>\r\n    <div className={classes.containerWrapper}>\r\n      <div className={classes.containerBackdrop}/>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        className={classes.modal}\r\n      >\r\n        <div className={classes.paper}>\r\n        <Typography variant=\"h4\" align=\"center\">{actor.name}'s Biography</Typography>\r\n        <Typography variant=\"body1\" align=\"justify\">{actor.biography}</Typography>\r\n        </div>\r\n      </Modal>\r\n      <img \r\n              alt=\"\"\r\n              src={backgroundImg} \r\n              className={classes.img}\r\n          />\r\n      <Grid container justify=\"center\" alignItems=\"center\" className={classes.sliderConent}>\r\n      <Grid container item xs={12} md={3} justify=\"center\" alignItems=\"center\"  className={classes.mainGrid}>\r\n          {actor.id ? (\r\n            <img\r\n            alt={actor.name}\r\n            src={`${tmdbPosterPath + actor.profile_path}`}\r\n            className={classes.viewPoster}></img>\r\n            ) : <Skeleton variant=\"rect\" animation=\"wave\" width={\"300px\"} height={\"450px\"}/>}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={7}>\r\n          <Container>\r\n          {actor.id ?\r\n        <Typography variant=\"h4\"  className={classes.title}>{actor.name}</Typography> : <Skeleton animation=\"wave\" variant=\"h4\"></Skeleton>}\r\n        {actor.id ?\r\n        <Typography  className={classes.ratings}>Biography</Typography> : <Skeleton animation=\"wave\" variant=\"rect\" height={16} width={25}/>}\r\n        {\r\n          actor.id ? \r\n        <Typography variant=\"h6\" className={classes.personOverview} >{actor.biography || \"Biography Not Found!\"}</Typography>\r\n        : <React.Fragment> \r\n          <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n          <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n          <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n          <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n          <Skeleton animation=\"wave\" variant=\"text\"></Skeleton>\r\n</React.Fragment>\r\n}\r\n<Grid container justify=\"space-around\" alignItems=\"center\" spacing={3}>\r\n  <Grid item xs={6}>\r\n  {  actor.id ?\r\n        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.viewButton}\r\n         onClick={handleOpen}\r\n        >Full Biography</Button>\r\n        : <Skeleton animation=\"wave\" variant=\"rect\" height=\"3rem\" width={\"15rem\"}/>\r\n}\r\n  </Grid>\r\n  <Grid item xs={6}>\r\n  {  actor.id ?\r\n        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.viewButton}\r\n         onClick={onClickLink}\r\n        >View Photos</Button>\r\n        : <Skeleton animation=\"wave\" variant=\"rect\" height=\"3rem\" width={\"15rem\"}/>\r\n}\r\n  </Grid>\r\n</Grid>\r\n</Container>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonBiography\r\n","import { Button, Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport MovieList from '../Movies/MovieList';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  my3:{margin:\"2rem auto\"},\r\n  my1:{margin:\"0.5rem auto 1.5rem\"},\r\n  button:{maxWidth:\"15rem\",margin:\"1rem auto\"},\r\n}));\r\n\r\nconst Casting = ({ casting, actor, match, history }) => {\r\n  const actorId = actor.id;\r\n  const classes = useStyles();\r\n  const onClickLink = () => {\r\n    history.push(`/view/person/profile/${actorId}/casting`);\r\n    window.scrollTo(null, 0);\r\n  };\r\n  return (\r\n<Container className={classes.my3}>\r\n      <Grid container justify=\"space-between\">\r\n        <Grid item xs={12} sm={8}>\r\n          <Typography variant=\"h6\" className={classes.my1}>Known For</Typography>\r\n          <MovieList \r\n              movies={casting.slice(0,8)} \r\n              sm={4}\r\n          />\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Button variant=\"contained\" \r\n              color=\"primary\"\r\n              fullWidth\r\n              className={classes.button}\r\n              onClick={onClickLink}\r\n              size=\"large\"\r\n              >View All Casting</Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          \r\n          {actor.birthday && \r\n          <div className={classes.my1}>\r\n          <Typography variant=\"h6\">Birthday</Typography>\r\n          <Typography variant=\"body1\">{actor.birthday}</Typography>\r\n          </div>          \r\n          }\r\n          {actor.known_for_department && \r\n          <div className={classes.my1}>\r\n          <Typography variant=\"h6\">Known For</Typography>\r\n          <Typography variant=\"body1\">{actor.known_for_department}</Typography>\r\n          </div>\r\n          }\r\n          {actor.gender && \r\n                    <div className={classes.my1}>\r\n                    <Typography variant=\"h6\">Gender</Typography>\r\n                    <Typography variant=\"body1\">{actor.gender === 1 ? 'Female' : 'Male'}</Typography>\r\n                    </div>\r\n          }\r\n          {actor.place_of_birth &&           \r\n          <div className={classes.my1}>\r\n          <Typography variant=\"h6\">Place of Birth</Typography>\r\n          <Typography variant=\"body1\">{actor.place_of_birth}</Typography>\r\n          </div> }\r\n          {actor.also_known_as && actor.also_known_as.length !== 0 && (\r\n              <div className={classes.my1}>\r\n                <Typography variant=\"h6\">Also known as</Typography>\r\n              {actor.also_known_as && actor.also_known_as.map(name => (\r\n                          <Typography key={name} variant=\"body1\">{name}\r\n                          </Typography>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Casting\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport { fetchSelectedPerson } from '../store/actions';\r\nimport PersonBiography from '../components/People/PersonBiography';\r\nimport Casting from '../components/People/Casting';\r\n\r\nconst ViewPeople = (props) => {\r\n  const { actor, casting } = useSelector(state => ({\r\n    actor: state.people.person.actor,\r\n    casting: state.people.person.casting,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const actorId = props.match.params.id;\r\n\r\n  useDocumentTitle(actor.id ? `${actor.name} Details` : 'View Person | MOVX');\r\n  useEffect(() => {\r\n    if (parseInt(actorId, 10) !== actor.id) {\r\n      dispatch(fetchSelectedPerson(actorId));\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <PersonBiography actor={actor} history={props.history} />\r\n      <Casting\r\n      actor={actor}\r\n      casting={casting}\r\n      history={props.history}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewPeople\r\n","import { Container, Grid, Typography } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport useStyles from '../common/Styles';\r\nimport MovieList from '../components/Movies/MovieList';\r\nimport { isEmpty } from '../helpers/helperFunctions';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport backgroundImg from '../images/background.jpg';\r\n\r\nconst ViewCasting = ({history}) => {\r\n  const classes = useStyles();\r\n  const { actor, casting } = useSelector(state => ({\r\n    actor: state.people.person.actor,\r\n    casting: state.people.person.casting,\r\n  }));\r\n\r\n  useDocumentTitle('Castings | MOVIESARK');\r\n  useEffect(() => {\r\n    if (isEmpty(actor)) {\r\n      history.goBack();\r\n    }\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.posterContainerWrapper}>\r\n        <div className={classes.containerBackdrop}></div>\r\n        <img src={backgroundImg} alt=\"\" className={classes.img}></img>\r\n        <Container className={classes.posterSliderConent}>\r\n          <div className={classes.personContainer}>\r\n          <Grid container justify=\"center\" alignItems=\"center\" className={classes.h100}>\r\n            <Grid item xs={12}>\r\n        <Typography variant=\"h3\">{actor.name}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.my1}>\r\n        <Typography variant=\"subtitle1\">Casted Movies</Typography>\r\n        <Typography variant=\"subtitle1\">{casting.length} Movies</Typography>\r\n        </Grid>\r\n        </Grid>\r\n        </div>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n      <MovieList\r\n          category=\"movie\"\r\n          movies={casting}\r\n        />\r\n      </Container>\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ViewCasting\r\n","export default __webpack_public_path__ + \"static/media/action.4d2828e3.jpg\";","export default __webpack_public_path__ + \"static/media/adventure.94b16555.jpg\";","export default __webpack_public_path__ + \"static/media/animation.3f7576ed.jpg\";","export default __webpack_public_path__ + \"static/media/comedy.590e4cd4.jpg\";","export default __webpack_public_path__ + \"static/media/crime.5bce08d3.jpg\";","export default __webpack_public_path__ + \"static/media/documentary.2edb2ed9.jpg\";","export default __webpack_public_path__ + \"static/media/drama.9f598f2a.png\";","export default __webpack_public_path__ + \"static/media/family.1e3dab12.jpg\";","export default __webpack_public_path__ + \"static/media/fantasy.dcb35fb9.jpg\";","export default __webpack_public_path__ + \"static/media/history.54874b61.jpg\";","export default __webpack_public_path__ + \"static/media/horror.4b84e10d.jpg\";","export default __webpack_public_path__ + \"static/media/music.a6fc6a2f.jpg\";","export default __webpack_public_path__ + \"static/media/mystery.de689c35.jpg\";","export default __webpack_public_path__ + \"static/media/romance.88274942.jpg\";","export default __webpack_public_path__ + \"static/media/science.87ee8043.jpg\";","export default __webpack_public_path__ + \"static/media/tv.b177f11d.jpg\";","export default __webpack_public_path__ + \"static/media/thriller.bc78861f.jpg\";","export default __webpack_public_path__ + \"static/media/war.809691ba.jpg\";","export default __webpack_public_path__ + \"static/media/western.7eb9f807.jpg\";","import { ButtonBase, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport useStyles from '../../common/Styles';\r\nimport action from '../../images/action.jpg';\r\nimport adventure from '../../images/adventure.jpg';\r\nimport animation from '../../images/animation.jpg';\r\nimport comedy from '../../images/comedy.jpg';\r\nimport crime from '../../images/crime.jpg';\r\nimport documentary from '../../images/documentary.jpg';\r\nimport drama from '../../images/drama.png';\r\nimport family from '../../images/family.jpg';\r\nimport fantasy from '../../images/fantasy.jpg';\r\nimport history from '../../images/history.jpg';\r\nimport horror from '../../images/horror.jpg';\r\nimport music from '../../images/music.jpg';\r\nimport mystery from '../../images/mystery.jpg';\r\nimport romance from '../../images/romance.jpg';\r\nimport science from '../../images/science.jpg';\r\nimport tv from '../../images/tv.jpg';\r\nimport thriller from '../../images/thriller.jpg';\r\nimport war from '../../images/war.jpg';\r\nimport western from '../../images/western.jpg';\r\n\r\nconst GenreCard = (props) => {\r\n  const classes = useStyles();\r\n  const { \r\n    id,\r\n    name\r\n  } = props.genre;\r\n  const genreName = name.split(' ')[0].toLowerCase();\r\n\r\n  const paths = {\r\n    action,\r\n    adventure,\r\n    animation,\r\n    comedy,\r\n    crime,\r\n    documentary,\r\n    drama,\r\n    family,\r\n    fantasy,\r\n    history,\r\n    horror,\r\n    music,\r\n    mystery,\r\n    romance,\r\n    science,\r\n    tv,\r\n    thriller,\r\n    war,\r\n    western\r\n  };\r\n  return (\r\n    <NavLink className={classes.navLink} to={`/genre/${name.toLowerCase().replace(' ', '-')}/${id}`}>\r\n<ButtonBase\r\n          focusRipple\r\n          key={name}\r\n          className={classes.image}\r\n          focusVisibleClassName={classes.focusVisible}\r\n          style={{\r\n            width: \"80%\",\r\n          }}\r\n        >\r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: `url(${paths[genreName]})`,\r\n            }}\r\n          />\r\n          <span className={classes.imageBackdrop} />\r\n          <span className={classes.imageButton}>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"subtitle1\"\r\n              color=\"inherit\"\r\n              className={classes.imageTitle}\r\n            >\r\n              {name}\r\n              <span className={classes.imageMarked} />\r\n            </Typography>\r\n          </span>\r\n        </ButtonBase>\r\n        </NavLink>\r\n  )\r\n}\r\n\r\nexport default GenreCard\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isEmpty } from '../helpers/helperFunctions';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport {fetchGenres} from '../store/actions/index';\r\nimport useStyles from '../common/Styles';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport GenreCard from '../components/Genre/GenreCard';\r\n\r\nconst Genre = (props) => {\r\n  const classes = useStyles();\r\n  const { genres} = useSelector(state => ({\r\n    genres: state.genre.genres,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  useDocumentTitle('Genres | MOVIESARK');\r\n  useEffect(() => {\r\n    if (isEmpty(genres)) {\r\n      dispatch(fetchGenres('/genre/movie/list?'));\r\n    }\r\n  }, []);\r\n  return (\r\n    <Container className={classes.py4}>\r\n      <Typography variant=\"h4\" className={classes.my2}>View Genres</Typography>\r\n      <Grid container spacing={3}>\r\n      {genres.map((genre) => {\r\n              return (\r\n                  <Grid item xs={12} sm={6} key={genre.id}>\r\n                <GenreCard\r\n                  category=\"genre\"\r\n                  genre={genre}\r\n                />\r\n                </Grid>\r\n              );\r\n            })}\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Genre\r\n","import { Container, Divider, Grid, Typography } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyles from '../common/Styles';\r\nimport MovieList from '../components/Movies/MovieList';\r\nimport { numberWithCommas } from '../helpers/helperFunctions';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport usePageSaver from '../hooks/usePageSaver';\r\nimport { fetchGenreCategory } from '../store/actions';\r\n\r\nconst ViewGenre = (props) => {\r\n  const classes = useStyles();\r\n  const { genreMovies } = useSelector(state => ({\r\n    genreMovies: state.genre.genreMovies,\r\n  }));\r\n  const { currentPage, setCurrentPage } = usePageSaver();\r\n  const dispatch = useDispatch();\r\n  const query = `/discover/movie?&with_genres=${props.match.params.id}`;\r\n\r\n\r\n  useDocumentTitle('Genres | MOVIESARK');\r\n  useEffect(() => {\r\n    dispatch(fetchGenreCategory(query, currentPage));\r\n  }, []);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    if (genreMovies.page !== page) {\r\n      setCurrentPage(page);\r\n      dispatch(fetchGenreCategory(query, page));\r\n    }\r\n  };\r\n  return (\r\n    <Container className={classes.py4}>\r\n      <Typography variant=\"h4\">{props.match.params.genre.split(' ')[0].toUpperCase().replace('-', ' ')}</Typography>\r\n      <Typography variant=\"h6\">{numberWithCommas(genreMovies.total_results)} Movies</Typography>\r\n      <Divider className={classes.mt1}></Divider>\r\n      <MovieList \r\n      category=\"movie\"\r\n      movies={genreMovies.results}\r\n      templateCount={10}\r\n      ></MovieList>\r\n    <Grid container justify=\"center\" alignItems=\"center\" className={classes.mt1}>\r\n      <Pagination\r\n      count={genreMovies.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      className={classes.my2}\r\n      ></Pagination>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ViewGenre\r\n","import { Grid, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport useStyles from '../../common/Styles';\r\nimport PosterCard from '../Poster/PosterCard';\r\n\r\nconst PersonProfiles = ({posters,id}) => {\r\nconst classes = useStyles();\r\nreturn posters.length >=1 ? \r\n<Grid container spacing={3} className={classes.my3}>\r\n  <Grid item xs={12}>\r\n    <Typography variant=\"h5\">Profile Images</Typography>\r\n  </Grid>\r\n  {posters.map((poster,index)=>\r\n  <Grid item xs={6} sm={3} md={2} key={`${id}_poster${index}`}>\r\n    <PosterCard poster={poster} />\r\n  </Grid>)}\r\n</Grid>\r\n:\r\n<Typography variant=\"h5\" className={classes.my3}>No Profile Images Found!</Typography>\r\n}\r\n\r\nexport default PersonProfiles\r\n","import { Container, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport useStyles from '../common/Styles';\r\nimport { isEmpty } from '../helpers/helperFunctions';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport backgroundImg from '../images/background.jpg';\r\nimport PersonProfiles from '../components/People/PersonProfiles';\r\n\r\nconst ViewPictures = ({history}) => {\r\n  const classes = useStyles();\r\n  const actor = useSelector((state) => state.people.person.actor);\r\n  useDocumentTitle('Profile Pictures');\r\n  useEffect(() => {\r\n    if (isEmpty(actor)) {\r\n      history.goBack();\r\n    }\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n        <div className={classes.posterContainerWrapper}>\r\n        <div className={classes.containerBackdrop}></div>\r\n        <img src={backgroundImg} alt=\"\" className={classes.img}></img>\r\n        <Container className={classes.posterSliderConent}>\r\n          <div className={classes.personContainer}>\r\n          <Grid container justify=\"center\" alignItems=\"center\" className={classes.h100}>\r\n            <Grid item xs={12}>\r\n        <Typography variant=\"h3\">{actor.name}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.my1}>\r\n        <Typography variant=\"subtitle1\">Casted Movies</Typography>\r\n        <Typography variant=\"subtitle1\">{actor.images.profiles.length} Movies</Typography>\r\n        </Grid>\r\n        </Grid>\r\n        </div>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n      <PersonProfiles\r\n          id={actor.id}\r\n          posters={actor.images.profiles}\r\n        />\r\n      </Container>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ViewPictures\r\n","import { Container, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport usePageSaver from '../../hooks/usePageSaver';\r\nimport { searchMovies } from '../../store/actions';\r\nimport MovieList from '../Movies/MovieList';\r\nimport useStyles from '../../common/Styles';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nconst SearchMovieTab = ({movies,query}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { currentPage, setCurrentPage } = usePageSaver();\r\n  const handlePageChange = (event, page) => {\r\n    if (movies.page !== page) {\r\n      movies.results=undefined;\r\n      setCurrentPage(page);\r\n      dispatch(searchMovies(`/search/movie?query=${query}`, page));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.pyTab}>\r\n      <MovieList movies={movies.results} templateCount={20} category=\"movie\"></MovieList>\r\n      <Grid container className={classes.my1} justify=\"center\" alignItems=\"center\">\r\n        <Pagination\r\n      count={movies.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n        </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchMovieTab\r\n","import { Container, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport usePageSaver from '../../hooks/usePageSaver';\r\nimport { searchTvShows } from '../../store/actions';\r\nimport MovieList from '../Movies/MovieList';\r\nimport useStyles from '../../common/Styles';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nconst SearchTvTab = ({tvShows,query}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { currentPage, setCurrentPage } = usePageSaver();\r\n  const handlePageChange = (event, page) => {\r\n    if (tvShows.page !== page) {\r\n      tvShows.results=undefined;\r\n      setCurrentPage(page);\r\n      dispatch(searchTvShows(`/search/tv?query=${query}`, page));\r\n    }\r\n  };\r\n  console.log(tvShows);\r\n  return (\r\n    <Container className={classes.pyTab}>\r\n      <MovieList movies={tvShows.results} category=\"tv\" templateCount={20}>\r\n      </MovieList>\r\n      <Grid container className={classes.my1} justify=\"center\" alignItems=\"center\">\r\n        <Pagination\r\n      count={tvShows.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n        </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchTvTab\r\n","import { Container, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport usePageSaver from '../../hooks/usePageSaver';\r\nimport { searchPeople, searchTvShows } from '../../store/actions';\r\nimport PeopleList from '../People/PeopleList';\r\nimport useStyles from '../../common/Styles';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nconst SearchPeopleTab = ({people,query}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { currentPage, setCurrentPage } = usePageSaver();\r\n  const handlePageChange = (event, page) => {\r\n    if (people.page !== page) {\r\n      people.results=undefined;\r\n      setCurrentPage(page);\r\n      dispatch(searchPeople(`/search/people?query=${query}`, page));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.pyTab}>\r\n      <PeopleList sm={3} md={2} people={people.results} templateCount={20}></PeopleList>\r\n      <Grid container className={classes.my1} justify=\"center\" alignItems=\"center\">\r\n        <Pagination\r\n      count={people.total_pages}\r\n      page={currentPage}\r\n      onChange={handlePageChange}\r\n      boundaryCount={2}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      ></Pagination>\r\n        </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchPeopleTab\r\n","import { AppBar, Container, Tab, Tabs, Typography, useTheme } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyles from '../common/Styles';\r\nimport { numberWithCommas } from '../helpers/helperFunctions';\r\nimport useDidMount from '../hooks/useDidMount';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport { search } from '../store/actions';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport SearchMovieTab from '../components/Search/SearchMovieTab';\r\nimport SearchTvTab from '../components/Search/SearchTvTab';\r\nimport SearchPeopleTab from '../components/Search/SearchPeopleTab';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst Search = ({match}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const theme = useTheme();\r\n  useDocumentTitle('Search | MOVIESARK');\r\n  useEffect(() => {\r\n    const queryString = match.params.query;\r\n    if (queryString !== query) {\r\n      dispatch(search(queryString));\r\n    }\r\n  }, []);\r\n  const { movies, tv, query, people,totalFound } = useSelector(state => ({\r\n    movies: state.search.search.movies,\r\n    tv: state.search.search.tv,\r\n    query: state.search.search.query,\r\n    people: state.search.search.people,\r\n    totalFound: state.search.search.people.total_results +\r\n    state.search.search.movies.total_results +\r\n    state.search.search.tv.total_results,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const didMount = useDidMount();\r\n\r\n  useEffect(() => {\r\n      dispatch(search(match.params.query));\r\n  }, [match.params.query]);\r\n\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.pyTab}>\r\n      <Typography variant=\"h4\" className={classes.my2}>Search</Typography>\r\n      <Typography variant=\"body1\" className={classes.my2}>\r\n      {numberWithCommas(totalFound)}&nbsp;\r\n            total results with keyword: &nbsp; {query}\r\n      </Typography>\r\n      <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label={`Movies ${movies.total_results}`} {...a11yProps(0)} />\r\n          <Tab label={`Tv Shows ${tv.total_results}`} {...a11yProps(1)} />\r\n          <Tab label={`People ${people.total_results}`} {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <SearchMovieTab\r\n              role=\"tab-panel\"\r\n              id={`full-width-tabpanel-0`}\r\n              aria-labelledby={`full-width-tab-0`}\r\n              movies={movies}\r\n              query={match.params.query}\r\n        />\r\n        <SearchTvTab\r\n              role=\"tab-panel\"\r\n              id={`full-width-tabpanel-1`}\r\n              aria-labelledby={`full-width-tab-1`}\r\n              query={match.params.query}\r\n              tvShows={tv}\r\n        />\r\n        <SearchPeopleTab\r\n              role=\"tab-panel\"\r\n              id={`full-width-tabpanel-2`}\r\n              aria-labelledby={`full-width-tab-2`}\r\n              people={people}\r\n              query={match.params.query}\r\n        />\r\n      </SwipeableViews>\r\n    </div>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Search","import { Fab } from '@material-ui/core';\r\nimport React, { useEffect, useRef } from 'react'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport useStyles from './Styles';\r\n\r\nconst ScrollTop = () => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', scrollHandler);\r\n\r\n    return () =>  window.removeEventListener('scroll', scrollHandler);\r\n }, []);\r\n\r\n const scroll = useRef(null);\r\n\r\n const scrollToTop = (y, duration) => {\r\n   const initialY = document.documentElement.scrollTop || document.body.scrollTop;\r\n   const baseY = (initialY + y) * 0.5;\r\n   const difference = initialY - baseY;\r\n   const startTime = performance.now();\r\n\r\n   const step = () => {\r\n     let normalizedTime = (performance.now() - startTime) / duration;\r\n     if (normalizedTime > 1) normalizedTime = 1;\r\n\r\n     window.scrollTo(0, baseY + difference * Math.cos(normalizedTime * Math.PI));\r\n     if (normalizedTime < 1) window.requestAnimationFrame(step);\r\n   };\r\n   window.requestAnimationFrame(step);\r\n };\r\n\r\n const scrollHandler = () => {\r\n   if (window.pageYOffset >= 500) {\r\n     scroll.current.style.transform = 'scale(1)';\r\n   } else {\r\n     scroll.current.style.transform = 'scale(0)';\r\n   }\r\n }\r\n  return (\r\n    <Fab \r\n    color=\"primary\"\r\n    size=\"small\" \r\n    className={classes.scrollTop}\r\n    onClick={() => scrollToTop(0, 400)}\r\n    ref={scroll} \r\n    >\r\n      <ArrowUpwardIcon/>\r\n    </Fab>\r\n  )\r\n}\r\n\r\nexport default ScrollTop\r\n","import { ThemeProvider } from '@material-ui/core';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/Header/NavBar';\nimport Home from './containers/Home';\nimport UpcomingMovies from './containers/UpcomingMovies';\nimport * as routes from './constants/routes';\nimport TopRatedMovies from './containers/TopRatedMovies';\nimport TrendingMovies from './containers/TrendingMovies';\nimport ViewMovie from './containers/ViewMovie';\nimport {DarkTheme, LightTheme} from './common/Theme';\nimport { useState } from 'react';\nimport DiscoverMovies from './containers/DiscoverMovies';\nimport TvShows from './containers/TvShows';\nimport People from './containers/People';\nimport ViewPeople from './containers/ViewPeople';\nimport ViewCasting from './containers/ViewCasting';\nimport Genre from './containers/Genre';\nimport ViewGenre from './containers/ViewGenre';\nimport ViewPictures from './containers/ViewPictures';\nimport Search from './containers/Search';\nimport ScrollTop from './common/ScrollTop';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={DarkTheme}>\n        <ScrollTop />\n        <Route path=\"/\" component={NavBar}/>\n      <Switch>\n          <Route path={routes.HOME} exact component={Home}></Route>\n          <Route path={routes.UPCOMING} exact component={UpcomingMovies}></Route>\n          <Route path={routes.TOP_RATED} exact component={TopRatedMovies}></Route>\n          <Route path={routes.VIEW_MOVIE} exact component={ViewMovie}></Route>\n          <Route path={routes.TRENDING} exact component={TrendingMovies}></Route>\n          <Route path={routes.DISCOVER} exact component={DiscoverMovies}></Route>\n          <Route path={routes.TV} exact component={TvShows}></Route>\n          <Route path={routes.PEOPLE} exact component={People}></Route>\n          <Route path={routes.VIEW_PEOPLE} exact component={ViewPeople}></Route>\n          <Route path={routes.VIEW_PEOPLE_CASTING} exact component={ViewCasting}></Route>\n          <Route path={routes.GENRE} exact component={Genre}></Route>\n          <Route path={routes.VIEW_GENRE} exact component={ViewGenre}></Route>\n          <Route path={routes.VIEW_PEOPLE_PROFILE} exact component={ViewPictures}></Route>\n          <Route path={routes.SEARCH} exact component={Search}></Route>\n          <Redirect to={routes.HOME}></Redirect>\n        </Switch>\n        </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as act from '../actions/actions';\r\n\r\nconst initialState = {\r\n  trendingMovies: {},\r\n  discoverMovies: {},\r\n  current: {\r\n    movie: {},\r\n    keywords: [],\r\n    casts: [],\r\n    reviews: {}\r\n  },\r\n  popularMovies: {},\r\n  topRatedMovies: {},\r\n  upcomingMovies: {},\r\n  tvShows: {},\r\n}\r\n\r\nconst moviesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case act.FETCH_TRENDING_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        trendingMovies: { ...action.payload }\r\n      };\r\n      break;\r\n    case act.FETCH_DISCOVER_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        discoverMovies: { ...action.payload }\r\n      };\r\n      break;\r\n    case act.FETCH_TV_SHOWS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tvShows: { ...action.payload }\r\n      };\r\n      break;\r\n    case act.FETCH_SELECTED_MOVIE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n      break;\r\n    case act.FETCH_POPULAR_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        popularMovies: action.payload\r\n      };\r\n      break;\r\n    case act.FETCH_TOPRATED_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        topRatedMovies: action.payload\r\n      };\r\n      break;\r\n    case act.FETCH_UPCOMING_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        upcomingMovies: action.payload\r\n      };\r\n      break;\r\n    case act.FETCH_MAIN_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        upcomingMovies: action.payload.upcoming,\r\n        topRatedMovies: action.payload.topRated,\r\n        popularMovies: action.payload.popular\r\n      };\r\n      break;\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default moviesReducer;\r\n","import * as act from '../actions/actions';\r\n\r\nconst initialState = {\r\n  tv: {\r\n    genre: '',\r\n    sort: '',\r\n    year: '',\r\n    query: ''\r\n  },\r\n  discover: {\r\n    genre: '',\r\n    sort: '',\r\n    year: '',\r\n    query: ''\r\n  }\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case act.SET_YEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        [action.payload.target]: {\r\n          ...state[action.payload.target],\r\n          year: action.payload.year\r\n        }\r\n      };\r\n      break;\r\n    case act.SET_GENRE_FILTER:\r\n      return {\r\n        ...state,\r\n        [action.payload.target]: {\r\n          ...state[action.payload.target],\r\n          genre: action.payload.genre\r\n        }\r\n      };\r\n      break;\r\n    case act.SET_SORT_FILTER:\r\n      return {\r\n        ...state,\r\n        [action.payload.target]: {\r\n          ...state[action.payload.target],\r\n          sort: action.payload.sort\r\n        }\r\n      };\r\n      break;\r\n    case act.UPDATE_QUERY:\r\n      return {\r\n        ...state,\r\n        [action.payload.target]: {\r\n          ...state[action.payload.target],\r\n          query: action.payload.query\r\n        }\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_GENRES_SUCCESS, FETCH_GENRE_CATEGORY_SUCCESS } from '../actions/actions';\r\n\r\nconst initialState = {\r\n  genres: [],\r\n  genreMovies: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_GENRES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        genres: [...action.payload.genres]\r\n      }; \r\n      break;\r\n    case FETCH_GENRE_CATEGORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        genreMovies: action.payload\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_PEOPLE_SUCCESS, FETCH_SELECTED_PERSON_SUCCESS } from '../actions/actions';\r\n\r\nconst initialState  = {\r\n  people: {},\r\n  person: {\r\n    actor: {},\r\n    casting: []\r\n  }\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PEOPLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        people: { ...action.payload }\r\n      };   \r\n      break;\r\n    case FETCH_SELECTED_PERSON_SUCCESS:\r\n      return {\r\n        ...state,\r\n        person: {\r\n          ...state.person,\r\n          actor: action.payload.actor,\r\n          casting: action.payload.casting\r\n        }\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as act from '../actions/actions';\r\n\r\nconst initialState = {\r\n  search: {\r\n    query: '',\r\n    tv: {},\r\n    movies: {},\r\n    people: {}\r\n  },\r\n  recentSearch: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case act.ADD_SEARCH_HISTORY:\r\n      return {\r\n        ...state,\r\n        recentSearch: [\r\n          ...state.recentSearch, \r\n          action.payload\r\n        ]\r\n      };\r\n      break;\r\n    case act.CLEAR_SEARCH_HISTORY:\r\n      return {\r\n        ...state,\r\n        recentSearch: []\r\n      };\r\n      break;\r\n    case act.SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          movies: action.payload.movies,\r\n          tv: action.payload.tv,\r\n          people: action.payload.people\r\n        }\r\n      };\r\n      break;\r\n    case act.SEARCH_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          movies: action.payload\r\n        }\r\n      };\r\n      break;\r\n    case act.SEARCH_TV_SHOWS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          tv: action.payload\r\n        }\r\n      };\r\n      break;\r\n    case act.SEARCH_PEOPLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          people: action.payload\r\n        }\r\n      };\r\n      break;\r\n    case act.UPDATE_SEARCH_QUERY:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          query: action.payload\r\n        }\r\n      };\r\n      break;\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n","import moviesReducer from './moviesReducer';\r\nimport filtersReducer from './filtersReducer';\r\nimport genreReducer from './genreReducer';\r\nimport peopleReducer from './peopleReducer';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default {\r\n  movies: moviesReducer,\r\n  search: searchReducer,\r\n  genre: genreReducer,\r\n  filters: filtersReducer,\r\n  people: peopleReducer,\r\n};\r\n","import {  call, put, select, all } from 'redux-saga/effects';\r\n\r\nimport { \r\n  IS_LOADING, \r\n  UPDATE_QUERY, \r\n  FETCH_SELECTED_PERSON_SUCCESS,\r\n  FETCH_SELECTED_MOVIE_SUCCESS,\r\n  FETCH_MAIN_MOVIES_SUCCESS,\r\n  SEARCH_SUCCESS,\r\n  UPDATE_SEARCH_QUERY\r\n} from '../store/actions/actions';\r\nimport * as api from '../api/api';\r\n\r\nfunction updateQuery(year, sort, genre) {\r\n  const yearFilter = year ? `&year=${year}&first_air_date_year=${year}` : '';\r\n  const sortFilter = sort ? `&sort_by=${sort}` : '';\r\n  const genreFilter = genre ? `&with_genres=${genre}` : '';\r\n  return `${yearFilter}${sortFilter}${genreFilter}`;\r\n}\r\n\r\nfunction* init() {\r\n  yield put({ type: IS_LOADING, payload: true });\r\n}\r\n\r\nfunction* errorHandler(e) {\r\n  console.log(e);\r\n  yield put({ type: IS_LOADING, payload: false });\r\n}\r\n\r\nexport function* fetchRequestSaga({ type, payload }) {\r\n  const { query, page } = payload;\r\n  try {\r\n    yield init();\r\n    const data = yield call(api.fetchRequest, query, page);\r\n    console.log(data);\r\n    yield put({ type: `${type}_SUCCESS`, payload: data});\r\n  } catch (e) {\r\n    yield call(errorHandler, e);\r\n  }\r\n}\r\n\r\nexport function* updateFilterQuerySaga({ payload }) {\r\n  const { target } = payload;\r\n  try {\r\n    const state = yield select();\r\n    const { year, sort, genre } = state.filters[target];\r\n    const query = updateQuery(year, sort, genre);\r\n    yield put({ type: UPDATE_QUERY, payload: { query, target } });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: IS_LOADING, payload: false });\r\n  }\r\n}\r\n\r\nexport function* fetchSelectedMovieSaga({ payload }) {\r\n  const { category, id } = payload;\r\n\r\n  try {\r\n    yield init();\r\n\r\n    const [movie, keywords, casts, reviews] = yield all([\r\n      call(api.fetchMovie, category, id),\r\n      call(api.fetchMovieKeywords, category, id),\r\n      call(api.fetchMovieCredits, category, id),\r\n      call(api.fetchMovieReviews, category, id)\r\n    ]);\r\n\r\n    yield put({ \r\n      type: FETCH_SELECTED_MOVIE_SUCCESS, \r\n      payload: { \r\n        movie, \r\n        keywords, \r\n        casts, \r\n        reviews \r\n      } \r\n    });\r\n    yield put({ type: IS_LOADING, payload: false });\r\n  } catch (e) {\r\n    yield call(errorHandler, e);\r\n    \r\n  }\r\n} \r\n\r\n// Fetching movies, tv-shows, and people all together\r\nexport function* searchSaga({ payload }) {\r\n  const { query } = payload;\r\n  try {\r\n    yield init();\r\n    const [tv, movies, people] = yield all([\r\n      call(api.searchTv, query),\r\n      call(api.searchMovie, query),\r\n      call(api.searchPerson, query)\r\n    ]);\r\n\r\n    yield put({ \r\n      type: SEARCH_SUCCESS, \r\n      payload: { \r\n        movies, \r\n        tv, \r\n        people \r\n      } \r\n    });\r\n    yield put({ type: IS_LOADING, payload: false });\r\n    yield put({ type: UPDATE_SEARCH_QUERY, payload: query });\r\n  } catch (e) {\r\n    yield call(errorHandler, e);\r\n  }\r\n}\r\n\r\n// Fetching popular, top-rated, and upcoming movies for home page\r\nexport function* fetchMainMoviesSaga() {\r\n  try {\r\n    yield init();\r\n    const [popular, topRated, upcoming] = yield all([\r\n      call(api.fetchRequest, '/movie/popular', 1),\r\n      call(api.fetchRequest, '/movie/top_rated', 1),\r\n      call(api.fetchRequest, '/movie/upcoming', 1)\r\n    ]);\r\n\r\n    yield put({ \r\n      type: FETCH_MAIN_MOVIES_SUCCESS, \r\n      payload: { \r\n        popular, \r\n        topRated, \r\n        upcoming \r\n      } \r\n    });\r\n    yield put({ type: IS_LOADING, payload: false });\r\n  } catch (e) {\r\n    yield call(errorHandler, e);\r\n  }\r\n}\r\n\r\nexport function* fetchSelectedPersonSaga({ payload }) {\r\n  try {\r\n    yield init();\r\n    const [actor, casting] = yield all([\r\n      call(api.fetchPerson, payload),\r\n      call(api.fetchPersonCasting, payload)\r\n    ]);\r\n\r\n    yield put({ type: IS_LOADING, payload: false });\r\n    yield put({ \r\n      type: FETCH_SELECTED_PERSON_SUCCESS, \r\n      payload: { actor, casting } \r\n    });\r\n  } catch (e) {\r\n    yield call(errorHandler, e);\r\n  }\r\n}\r\n","import { takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport * as action from '../store/actions/actions';\r\n\r\nimport { \r\n  fetchRequestSaga, \r\n  updateFilterQuerySaga, \r\n  fetchSelectedMovieSaga, \r\n  fetchSelectedPersonSaga,\r\n  fetchMainMoviesSaga,\r\n  searchSaga \r\n} from './sagas';\r\n\r\nfunction* rootSaga() {\r\n  yield takeLatest([\r\n    action.FETCH_TRENDING_MOVIES,\r\n    action.FETCH_DISCOVER_MOVIES,\r\n    action.FETCH_TV_SHOWS,\r\n    action.FETCH_PEOPLE,\r\n    action.FETCH_GENRES,\r\n    action.FETCH_GENRE_CATEGORY,\r\n    action.SEARCH_TV_SHOWS,\r\n    action.SEARCH_PEOPLE,\r\n    action.SEARCH_MOVIES\r\n  ], fetchRequestSaga);\r\n\r\n  yield takeEvery([\r\n    action.FETCH_POPULAR_MOVIES,\r\n    action.FETCH_TOPRATED_MOVIES,\r\n    action.FETCH_UPCOMING_MOVIES\r\n  ], fetchRequestSaga);\r\n\r\n  yield takeEvery([\r\n    action.SET_GENRE_FILTER,\r\n    action.SET_SORT_FILTER,\r\n    action.SET_YEAR_FILTER,\r\n  ], updateFilterQuerySaga);\r\n\r\n  yield takeLatest(action.FETCH_SELECTED_MOVIE, fetchSelectedMovieSaga);\r\n  yield takeLatest(action.SEARCH, searchSaga);\r\n  yield takeLatest(action.FETCH_MAIN_MOVIES, fetchMainMoviesSaga);\r\n  yield takeLatest(action.FETCH_SELECTED_PERSON, fetchSelectedPersonSaga);\r\n}\r\n\r\nexport default rootSaga;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport mainReducer from \"./store/reducer/index\";\nimport { BrowserRouter } from 'react-router-dom';\nimport rootSaga from \"./sagas/watchers\";\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst combinereducer = combineReducers(mainReducer);\n\nconst store = createStore(combinereducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}